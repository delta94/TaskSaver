{"version":3,"sources":["images/appIcon.png","contexts/AppContext.tsx","components/Theme/Theme.tsx","components/Message/Message.tsx","components/Logout/Logout.tsx","components/Navbar/Navbar.tsx","services/helper.tsx","services/auth.tsx","components/Forms/Validator/Validator.tsx","components/Forms/Login.tsx","services/organizations.tsx","components/Forms/Register.tsx","contexts/TasksContext.tsx","components/Tasks/TaskForm/TaskForm.tsx","components/Actions/Actions.tsx","components/Tasks/DeleteTask/DeleteTask.tsx","components/Tasks/TasksCards/TasksCards.tsx","components/Tasks/TasksContainer/TasksContainer.tsx","services/rooms.tsx","components/LeftSidebar/LeftSidebar.tsx","components/RightSidebar/RightSidebar.tsx","AppRouter/Routes/AuthenticatedRoute.tsx","AppRouter/Routes/UnauthenticatedRoute.tsx","AppRouter/Routes/DefaultRoute.tsx","components/Dashboard/Dashboard.tsx","AppRouter/AppRouter.tsx","App.tsx","serviceWorker.tsx","index.tsx"],"names":["module","exports","socket","io","AppContext","createContext","undefined","AppContextProvider","children","theme","setTheme","useState","message","setMessage","messageSeverity","setMessageSeverity","loggedInUser","setLoggedInUser","isAdmin","setIsAdmin","isMobile","useMediaQuery","isDrawerOpened","Provider","value","clearMessage","getUserFromLS","user","JSON","parse","localStorage","role","disconnect","clear","lightTheme","createMuiTheme","palette","type","primary","main","contrastText","secondary","success","typography","button","textTransform","overrides","MuiAvatar","colorDefault","backgroundColor","darkTheme","MuiCard","root","border","Theme","useContext","handleThemeChange","event","target","stringify","className","Radio","checked","onChange","messages","messageSeverities","Message","open","setOpen","closeMessage","useEffect","Snackbar","autoHideDuration","onClose","elevation","variant","severity","Logout","history","useHistory","IconButton","onClick","color","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","push","autoFocus","Navbar","buttonText","setButtonText","location","useLocation","pathname","_id","hideAuthRoutesButton","setAuthRoutesButtonValue","AppBar","position","Toolbar","src","appIcon","alt","window","reload","height","Typography","username","restOptions","formTypes","setRestOptions","methodType","body","method","headers","handleResponse","res","a","status","errorCodes","json","data","includes","loginService","options","fetch","registerService","handleAuthForm","args","clientInputs","setErrorMessage","resUserData","completeUserData","emailRegex","RegExp","nameRegex","usernameRegex","authFormTypes","validateUser","formType","firstName","lastName","email","password","organizationId","isValid","errors","test","length","Login","formValues","setFormValues","handleSubmit","e","preventDefault","formInputs","Avatar","component","onSubmit","TextField","required","margin","fullWidth","label","autoComplete","getOrganizationsService","Register","organizations","getOrganizations","FormControl","InputLabel","Select","map","organization","index","MenuItem","key","name","FormControlLabel","control","Checkbox","TasksContext","TasksContextProvider","tasks","setTasks","updatedTask","setUpdatedTask","deletedTaskId","setDeletedTaskId","chartData","setChartData","searchValue","setSearchValue","setOperationMessage","room","emit","on","newTask","prevTasks","removeAllListeners","findIndex","task","updateTasksArray","splice","removeTaskFromArray","openTasks","filter","closedTasks","setOpenClosedTasks","TaskForm","taskToEdit","title","setTitle","description","setDescription","isButtonDisabled","setButtonDisabled","isEditType","loggedInUserId","loggedInUserRole","handleClickOpen","handleClose","editOperation","addOperation","createdAt","Date","now","compareTasks","isTasksEqual","taskToEditValues","__v","updatedTaskValues","Object","keys","sort","aria-labelledby","disabled","Actions","Grid","item","xs","sm","md","style","width","DeleteTask","deleteTask","taskId","taskUserId","isCompleted","taskStatus","TasksCards","mathchedTasks","toLowerCase","isModifyAllowed","container","spacing","justify","date","Card","CardContent","gutterBottom","Intl","DateTimeFormat","format","split","join","CardActions","inputProps","TasksContainer","getAllUsersByRoom","roomId","LeftSidebar","users","setUsers","userId","organizationName","notLoggedInUser","admins","regularUsers","usersExceptLoggedInUser","getAllUsers","newUser","prevUsers","Person","ListItem","ListItemAvatar","ListItemText","Drawer","List","Divider","RightSidebar","anchor","AuthenticatedRoute","path","isAdminRoute","Component","isAllowed","render","xl","marginTop","to","UnauthenticatedRoute","props","DefaultRoute","Dashboard","dataSetColorByTheme","textColorByTheme","chartState","labels","datasets","barThickness","borderWidth","minHeight","maxHeight","maintainAspectRatio","display","text","fontSize","fontColor","legend","scales","xAxes","gridLines","ticks","yAxes","beginAtZero","withRouter","Container","maxWidth","exact","App","userSelectedTheme","ThemeProvider","CssBaseline","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"iHAAAA,EAAOC,QAAU,IAA0B,qC,oUCIvCC,EAASC,MAQPC,EAA2BC,6BAAcC,GAEzCC,EAAsC,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAAe,EAC/CC,mBAAS,IADsC,mBACtEC,EADsE,KAC7DC,EAD6D,OAE/BF,mBAAS,IAFsB,mBAEtEG,EAFsE,KAErDC,EAFqD,OAGrCJ,mBAAoB,IAHiB,mBAGtEK,EAHsE,KAGxDC,EAHwD,OAI/CN,oBAAS,GAJsC,mBAItEO,EAJsE,KAI7DC,EAJ6D,KAKvEC,EAAWC,YAAc,qBACzBC,EAAiBD,YAAc,sBAqBrC,OACE,kBAACjB,EAAWmB,SAAZ,CAAqBC,MAAO,CAC1BZ,UAASE,kBAAiBD,aAAYE,qBAAoBU,aAPzC,WACnBZ,EAAW,IACXE,EAAmB,KAKuDN,QAAOC,WAAUR,SACzFc,eAAcE,UAASQ,cAtBL,WACpB,IAAMC,EAAOC,KAAKC,MAAMC,aAAad,cACrCC,EAAgBU,GAChBR,EAAyB,IAAdQ,EAAKI,OAmBwBC,WAhBvB,WACjBF,aAAaG,QACb/B,EAAO8B,aACP9B,EAASC,MACTc,EAAgB,IAChBE,GAAW,IAWyCC,WAAUE,mBAE3Dd,I,oCC1CD0B,EAAaC,YAAe,CAChCC,QAAS,CACPC,KAAM,QACNC,QAAS,CACPC,KAAM,UACNC,aAAc,QAEhBC,UAAW,CACTF,KAAM,OACNC,aAAc,QAEhBE,QAAS,CACPH,KAAM,UACNC,aAAc,SAGlBG,WAAY,CACVC,OAAQ,CACNC,cAAe,eAGnBC,UAAW,CACTC,UAAW,CACTC,aAAc,CACZC,gBAAiB,eAMnBC,EAAYf,YAAe,CAC/BC,QAAS,CACPC,KAAM,OACNC,QAAS,CACPC,KAAM,WAERE,UAAW,CACTF,KAAM,QAERG,QAAS,CACPH,KAAM,UACNC,aAAc,SAGlBG,WAAY,CACVC,OAAQ,CACNC,cAAe,eAGnBC,UAAW,CACTK,QAAS,CACPC,KAAM,CACJC,OAAQ,mBAGZN,UAAW,CACTC,aAAc,CACZC,gBAAiB,eAMnBK,EAAkB,WAAO,IAAD,EACAC,qBAAWnD,GAA/BK,EADoB,EACpBA,MAAOC,EADa,EACbA,SAET8C,EAAoB,SAACC,GACzB/C,EAAS+C,EAAMC,OAAOlC,OACtBM,aAAarB,MAAQmB,KAAK+B,UAAUF,EAAMC,OAAOlC,QAGnD,OACE,yBAAKoC,UAAU,QACb,kBAACC,EAAA,EAAD,CAAOrC,MAAM,OAAOsC,QAAmB,SAAVrD,EAAkBsD,SAAUP,IACzD,kBAACK,EAAA,EAAD,CAAOrC,MAAM,QAAQsC,QAAmB,UAAVrD,EAAmBsD,SAAUP,M,2CCzE3DQ,EAEQ,iBAMRC,EACK,UADLA,EAEG,QAFHA,EAGK,UAGLC,EAAoB,WAAO,IAAD,EACqBX,qBAAWnD,GAAtDQ,EADsB,EACtBA,QAASE,EADa,EACbA,gBAAiBW,EADJ,EACIA,aADJ,EAENd,oBAAS,GAFH,mBAEvBwD,EAFuB,KAEjBC,EAFiB,KAIxBC,EAAe,WACnB5C,IACA2C,GAAQ,IASV,OANAE,qBAAU,WACR1D,EAAUwD,GAAQ,GAAQC,MAGzB,CAACzD,IAGF,oCACGA,GAAWE,GAAmB,kBAACyD,EAAA,EAAD,CAAUJ,KAAMA,EAAMK,iBAAkB,IAAMC,QAAS,kBAAMJ,MAC1F,kBAAC,IAAD,CAAUK,UAAW,EAAGC,QAAQ,SAASC,SAAU9D,EAAiB2D,QAAS,kBAAMJ,MAAiBzD,M,2GCA7FiE,EA/BU,WAAO,IACtB7C,EAAeuB,qBAAWnD,GAA1B4B,WADqB,EAELrB,oBAAS,GAFJ,mBAEtBwD,EAFsB,KAEhBC,EAFgB,KAGvBU,EAAUC,cAOhB,OACE,oCACE,kBAACC,EAAA,EAAD,CAAYC,QAAS,kBAAMb,GAAQ,IAAOc,MAAM,aAC9C,kBAAC,IAAD,OAEF,kBAACC,EAAA,EAAD,CAAQvB,UAAU,SAASO,KAAMA,EAAMM,QAAS,kBAAML,GAAQ,KAC5D,kBAACgB,EAAA,EAAD,CAAaxB,UAAU,eAAvB,WACA,kBAACyB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAmB1B,UAAU,gBAA7B,uCAIF,kBAAC2B,EAAA,EAAD,CAAe3B,UAAU,0BACvB,kBAAC4B,EAAA,EAAD,CAAQP,QAlBD,WACbjD,IACA8C,EAAQW,KAAK,WAgBkBC,WAAS,GAAlC,OACA,kBAACF,EAAA,EAAD,CAAQP,QAAS,kBAAMb,GAAQ,KAA/B,c,kBCmCKuB,G,OAxDA,WAAO,IACZ3E,EAAiBuC,qBAAWnD,GAA5BY,aADW,EAEiBL,mBAAS,IAF1B,mBAEZiF,EAFY,KAEAC,EAFA,KAGbf,EAAUC,cACVe,EAAWC,cAEjBzB,qBAAU,YACyB,WAAO,IAC9B0B,EAAaF,EAAbE,SAEJhF,EAAaiF,IACfC,IAE4CL,EAA/B,WAAbG,GAAsC,MAAbA,EAAiC,WAA4B,SAI1FG,KAEC,CAACnF,EAAc8E,IAElB,IAAMI,EAAuB,WAC3BL,EAAc,KAWhB,OACE,yBAAKjC,UAAU,kBACb,kBAACwC,EAAA,EAAD,CAAQC,SAAS,QAAQzC,UAAU,UACjC,kBAAC0C,EAAA,EAAD,KACE,yBAAKC,IAAKC,IAASC,IAAI,aAAaxB,QAZxB,WAClByB,OAAOZ,SAASa,UAWgDC,OAAO,OACjE,kBAACC,EAAA,EAAD,CAAYlC,QAAQ,KAAKf,UAAU,SAAnC,aACA,kBAAC,EAAD,MACC5C,EAAaiF,IACZ,oCACE,kBAACY,EAAA,EAAD,CAAYlC,QAAQ,YAAYf,UAAU,YAAY5C,EAAa8F,UACnE,kBAAC,EAAD,OAGF,oCACGlB,GAAc,kBAACJ,EAAA,EAAD,CAAQP,QAlBZ,WACrBH,EAAQW,KAAKG,IAiB6CV,MAAM,aAAaU,S,gCCxD3EmB,EACC,MADDA,EAEE,OAKFC,EACC,MADDA,GAEE,OAGFC,GAAiB,SAACC,EAAoBC,GAC1C,MAAO,CACLC,OAAQF,EACRG,QAAS,CAAE,eAAgB,oBAC3BF,KAAMvF,KAAK+B,UAAUwD,KAInBG,GAAc,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,6DACbC,EAAWF,EAAXE,OACFC,EAAa,CAAC,IAAK,IAAK,IAAK,KAFd,SAGFH,EAAII,OAHF,UAGfC,EAHe,QAKjBF,EAAWG,SAASJ,GALH,yCAMZ,CAAEG,OAAMlF,SAAS,IANL,gCASd,CAAEkF,OAAMlF,SAAS,IATH,2CAAH,sDCfdoF,GAAY,uCAAG,WAAOX,GAAP,iBAAAK,EAAA,6DACbO,EAAUd,GAAeF,EAAkBI,GAD9B,SAEDa,MAAM,GAAD,OAJb,WAIa,UAAoBD,GAFxB,cAEbR,EAFa,yBAGZD,GAAeC,IAHH,2CAAH,sDAMZU,GAAe,uCAAG,WAAOd,GAAP,iBAAAK,EAAA,6DAChBO,EAAUd,GAAeF,EAAkBI,GAD3B,SAEJa,MAAM,GAAD,OAVb,WAUa,aAAuBD,GAFxB,cAEhBR,EAFgB,yBAGfD,GAAeC,IAHA,2CAAH,sDAafW,GAAiB,SAACC,GAAoB,IAClCZ,EAAgDY,EAAhDZ,IAAKa,EAA2CD,EAA3CC,aAActD,EAA6BqD,EAA7BrD,QAASuD,EAAoBF,EAApBE,gBADK,EAEFd,EAAIK,KAA7BU,EAF2B,EAEjC3G,KAAmBf,EAFc,EAEdA,QAE3B,GAAI0H,EAAa,CACf,IAAMC,EAAgB,2BAAQH,GAAiBE,GAC/CxG,aAAad,aAAeY,KAAK+B,UAAU4E,GAC3CzD,EAAQW,KAAK,eAEb4C,EAAgBzH,IC/Bd4H,GAAa,IAAIC,OAAO,yIACxBC,GAAY,IAAID,OAAO,sBACvBE,GAAgB,IAAIF,OAAO,uBAE3BG,GACG,QADHA,GAEM,WAGNC,GAAe,SAAClH,EAAYmH,GAAsB,IAC9CC,EAAyEpH,EAAzEoH,UAAWC,EAA8DrH,EAA9DqH,SAAUlC,EAAoDnF,EAApDmF,SAAUmC,EAA0CtH,EAA1CsH,MAAOC,EAAmCvH,EAAnCuH,SAAUnH,EAAyBJ,EAAzBI,KAAMoH,EAAmBxH,EAAnBwH,eACxD5B,EAA+C,CAAE6B,SAAS,EAAMC,OAAQ,IAoC9E,OAlCKb,GAAWc,KAAKL,IACnB1B,EAAI8B,OAAO5D,KAAK,uCAGdyD,EAASK,OAAS,GACpBhC,EAAI8B,OAAO5D,KAAK,+CAGdqD,IAAaF,IAA0BG,GAAaC,GAAYlC,IAC7D4B,GAAUY,KAAKP,IAClBxB,EAAI8B,OAAO5D,KAAK,oCAGbiD,GAAUY,KAAKN,IAClBzB,EAAI8B,OAAO5D,KAAK,mCAGbkD,GAAcW,KAAKxC,IACtBS,EAAI8B,OAAO5D,KAAK,kCAGL,IAAT1D,GAAuB,IAATA,GAChBwF,EAAI8B,OAAO5D,KAAK,4BAGb0D,GACH5B,EAAI8B,OAAO5D,KAAK,wCAIhB8B,EAAI8B,OAAOE,OAAS,IACtBhC,EAAI6B,SAAU,GAGT7B,G,wCCKMiC,I,OAxCgB,SAAC,GAAiB,IAAf1E,EAAc,EAAdA,QAAc,EACWvB,qBAAWnD,GAA5DS,EADsC,EACtCA,WAAYE,EAD0B,EAC1BA,mBAAoBU,EADM,EACNA,aADM,EAEVd,mBAAS,CAAEsI,MAAO,GAAIC,SAAU,KAFtB,mBAEvCO,EAFuC,KAE3BC,EAF2B,KAIxCC,EAAY,uCAAG,WAAOC,GAAP,uBAAApC,EAAA,yDACnBoC,EAAEC,iBACFpI,IAEQwH,EAAoBQ,EAApBR,MAAOC,EAAaO,EAAbP,WAET3B,EAAMsB,GADNiB,EAAa,CAAEb,QAAOC,YACSN,KAE7BQ,QARW,iCASCtB,GAAagC,GATd,OASXvC,EATW,OAUjBW,GAAe,CAAEX,MAAKzC,UAASuD,oBAVd,wBAYjBA,EAAgBd,EAAI8B,OAAO,IAZV,4CAAH,sDAgBZhB,EAAkB,SAACzH,GACvBC,EAAWD,GACXG,EAAmBkD,IAGrB,OACE,yBAAKL,UAAU,mBACb,kBAACmG,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAAClD,EAAA,EAAD,CAAYjD,UAAU,OAAOoG,UAAU,KAAKrF,QAAQ,MAApD,SACA,0BAAMsF,SAAUN,GACd,kBAACO,GAAA,EAAD,CAAWC,UAAQ,EAACxF,QAAQ,WAAWyF,OAAO,SAASC,WAAS,EAACC,MAAM,QAAQC,aAAa,QAAQ/I,MAAOiI,EAAWR,MAAOlF,SAAU,SAAC6F,GAAD,OAAOF,EAAc,2BAAKD,GAAN,IAAkBR,MAAOW,EAAElG,OAAOlC,YAC7L,kBAAC0I,GAAA,EAAD,CAAWC,UAAQ,EAACxF,QAAQ,WAAWyF,OAAO,SAASC,WAAS,EAACC,MAAM,WAAWC,aAAa,WAAW/I,MAAOiI,EAAWP,SAAU7G,KAAK,WAAW0B,SAAU,SAAC6F,GAAD,OAAOF,EAAc,2BAAKD,GAAN,IAAkBP,SAAUU,EAAElG,OAAOlC,YACzN,kBAACgE,EAAA,EAAD,CAAQnD,KAAK,SAASgI,WAAS,EAAC1F,QAAQ,YAAYO,MAAM,WAA1D,aC5CFsF,GAAuB,uCAAG,8BAAAhD,EAAA,6DACxBO,EAAUd,GAAeF,GADD,SAEZiB,MAJR,oBAIsBD,GAFF,cAExBR,EAFwB,yBAGvBD,GAAeC,IAHQ,2CAAH,qD,4DCyFdkD,GA9EmB,SAAC,GAAiB,IAAf3F,EAAc,EAAdA,QAAc,EACQvB,qBAAWnD,GAA5DS,EADyC,EACzCA,WAAYE,EAD6B,EAC7BA,mBAAoBU,EADS,EACTA,aADS,EAEbd,mBAAS,CAC3CoI,UAAW,GACXC,SAAU,GACVlC,SAAU,GACVmC,MAAO,GACPC,SAAU,GACVwB,cAAe,GACfvB,eAAgB,GAChBjI,SAAS,IAVsC,mBAE1CuI,EAF0C,KAE9BC,EAF8B,KAajDpF,qBAAU,YACc,uCAAG,8BAAAkD,EAAA,sEACLgD,KADK,OACjBjD,EADiB,QAGvB,UAAIA,EAAIK,YAAR,aAAI,EAAU8C,gBACZhB,EAAc,2BAAKD,GAAN,IAAkBiB,cAAenD,EAAIK,KAAK8C,iBAJlC,2CAAH,qDAQtBC,KAEC,IAEH,IAAMhB,EAAY,uCAAG,WAAOC,GAAP,mCAAApC,EAAA,yDACnBoC,EAAEC,iBACFpI,IAEQsH,EAA4EU,EAA5EV,UAAWC,EAAiES,EAAjET,SAAUlC,EAAuD2C,EAAvD3C,SAAUmC,EAA6CQ,EAA7CR,MAAOC,EAAsCO,EAAtCP,SAAUC,EAA4BM,EAA5BN,eAAgBjI,EAAYuI,EAAZvI,UAGlEqG,EAAMsB,GADNiB,EAAa,CAAEf,YAAWC,WAAUlC,WAAUmC,QAAOC,WAAUnH,KAD/DA,EAAOb,EAAU,EAAI,EACgDiI,kBACtCP,KAE7BQ,QATW,iCAUCnB,GAAgB6B,GAVjB,OAUXvC,EAVW,OAYjBW,GAAe,CAAEX,MAAKa,aADD,CAAEtB,WAAU/E,OAAMoH,kBACHrE,UAASuD,oBAZ5B,wBAejBA,EAAgBd,EAAI8B,OAAO,IAfV,4CAAH,sDAmBZhB,EAAkB,SAACzH,GACvBC,EAAWD,GACXG,EAAmBkD,IAGrB,OACE,yBAAKL,UAAU,sBACb,kBAACmG,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAAClD,EAAA,EAAD,CAAYjD,UAAU,OAAOoG,UAAU,KAAKrF,QAAQ,MAApD,YACA,0BAAMsF,SAAUN,GACd,kBAACO,GAAA,EAAD,CAAWC,UAAQ,EAACxF,QAAQ,WAAWyF,OAAO,SAASC,WAAS,EAACC,MAAM,aAAaC,aAAa,aAAa/I,MAAOiI,EAAWV,UAAWhF,SAAU,SAAC6F,GAAD,OAAOF,EAAc,2BAAKD,GAAN,IAAkBV,UAAWa,EAAElG,OAAOlC,YAC/M,kBAAC0I,GAAA,EAAD,CAAWC,UAAQ,EAACxF,QAAQ,WAAWyF,OAAO,SAASC,WAAS,EAACC,MAAM,YAAYC,aAAa,YAAY/I,MAAOiI,EAAWT,SAAUjF,SAAU,SAAC6F,GAAD,OAAOF,EAAc,2BAAKD,GAAN,IAAkBT,SAAUY,EAAElG,OAAOlC,YAC3M,kBAAC0I,GAAA,EAAD,CAAWC,UAAQ,EAACxF,QAAQ,WAAWyF,OAAO,SAASC,WAAS,EAACC,MAAM,WAAWC,aAAa,WAAW/I,MAAOiI,EAAW3C,SAAU/C,SAAU,SAAC6F,GAAD,OAAOF,EAAc,2BAAKD,GAAN,IAAkB3C,SAAU8C,EAAElG,OAAOlC,YACzM,kBAAC0I,GAAA,EAAD,CAAWC,UAAQ,EAACxF,QAAQ,WAAWyF,OAAO,SAASC,WAAS,EAACC,MAAM,QAAQC,aAAa,QAAQ/I,MAAOiI,EAAWR,MAAOlF,SAAU,SAAC6F,GAAD,OAAOF,EAAc,2BAAKD,GAAN,IAAkBR,MAAOW,EAAElG,OAAOlC,YAC7L,kBAAC0I,GAAA,EAAD,CAAWC,UAAQ,EAACxF,QAAQ,WAAWyF,OAAO,SAASC,WAAS,EAACC,MAAM,WAAWC,aAAa,WAAW/I,MAAOiI,EAAWP,SAAU7G,KAAK,WAAW0B,SAAU,SAAC6F,GAAD,OAAOF,EAAc,2BAAKD,GAAN,IAAkBP,SAAUU,EAAElG,OAAOlC,YACzN,kBAACoJ,GAAA,EAAD,CAAahH,UAAU,cACrB,kBAACiH,GAAA,EAAD,qBACA,kBAACC,GAAA,EAAD,CAAQtJ,MAAOiI,EAAWN,eAAgBpF,SAAU,SAAC6F,GAAD,OAAYF,EAAc,2BAAKD,GAAN,IAAkBN,eAAgBS,EAAElG,OAAOlC,WACrHiI,EAAWiB,cAAcK,KAAI,SAACC,EAA4BC,GAA7B,OAC5B,kBAACC,GAAA,EAAD,CAAUC,IAAKF,EAAOzJ,MAAOwJ,EAAa/E,KAAM+E,EAAaI,WAInE,kBAACC,GAAA,EAAD,CACEC,QAAS,kBAACC,GAAA,EAAD,CAAUrG,MAAM,UAAUpB,QAAS2F,EAAWvI,QAAS6C,SAAU,kBAAM2F,EAAc,2BAAKD,GAAN,IAAkBvI,SAAUuI,EAAWvI,cAAgBoJ,MAAM,UAC5J,kBAAC9E,EAAA,EAAD,CAAQnD,KAAK,SAASgI,WAAS,EAAC1F,QAAQ,YAAYO,MAAM,WAA1D,e,iDC7EFsG,GAA6BnL,6BAAcC,GAE3CmL,GAAwC,SAAC,GAAkB,IAAhBjL,EAAe,EAAfA,SAAe,EACI+C,qBAAWnD,GAArEF,EADsD,EACtDA,OAAQW,EAD8C,EAC9CA,WAAYE,EADkC,EAClCA,mBAAoBW,EADc,EACdA,cADc,EAEpCf,mBAAiB,IAFmB,mBAEvD+K,EAFuD,KAEhDC,EAFgD,OAGxBhL,mBAA8B,MAHN,mBAGvDiL,EAHuD,KAG1CC,EAH0C,OAIpBlL,mBAAwC,MAJpB,mBAIvDmL,EAJuD,KAIxCC,EAJwC,OAK5BpL,mBAA6B,IALD,mBAKvDqL,EALuD,KAK5CC,EAL4C,OAMxBtL,mBAAS,IANe,mBAMvDuL,EANuD,KAM1CC,EAN0C,KAOxDnL,EAAeY,KAAKC,MAAMC,aAAad,cACvC8E,EAAWC,cAEXqG,EAAsB,SAACxL,GAC3BC,EAAWD,GACXG,EAAmBkD,IAuFrB,OApFAK,qBAAU,WACR5C,MAGC,CAACoE,IAEJxB,qBAAU,WACR,GAAIpE,EAAQ,CACV,IAAMmM,EAAOrL,EAAamI,eAC1BjJ,EAAOoM,KAAK,WAAYD,GAExBnM,EAAOqM,GAAG,gBAAgB,SAACb,GACrBA,GACFC,EAASD,MAIbxL,EAAOqM,GAAG,WAAW,SAACC,GAChBA,IACFb,GAAS,SAACc,GAAD,6BAA2BA,GAA3B,CAAsCD,OAC/CJ,EAAoB,+BAIxBlM,EAAOqM,GAAG,eAAe,SAACX,GACpBA,IACFC,EAAeD,GACfQ,EAAoB,iCAIxBlM,EAAOqM,GAAG,iBAAiB,SAACT,GACtBA,IACFC,EAAiBD,GACjBM,EAAoB,iCAK1B,OAAO,kBAAMlM,EAAOwM,wBAGnB,CAACxM,IAEJoE,qBAAU,WA4BJoH,IACEE,EA5BmB,WACvB,IAAMX,EAAQS,EAAMiB,WAAU,SAACC,GAAD,OAAgBA,EAAK3G,MAAQ2F,EAAY3F,OAEnEgF,GAAS,IACXS,EAAMT,GAAN,2BAAoBS,EAAMT,IAAWW,GACrCD,EAASD,GACTG,EAAe,OAuBfgB,GACSf,GApBe,WAC1B,IAAMb,EAAQS,EAAMiB,WAAU,SAACC,GAAD,OAAgBA,EAAK3G,MAAQ6F,KAEvDb,GAAS,IACXS,EAAMoB,OAAO7B,EAAO,GACpBc,EAAiB,OAgBjBgB,IAZuB,WACzB,GAAIrB,EAAMnC,OAAS,EAAG,CACpB,IAAMyD,EAAYtB,EAAMuB,QAAO,SAAAL,GAAI,OAAoB,IAAhBA,EAAKnF,UACtCyF,EAAcxB,EAAMuB,QAAO,SAAAL,GAAI,OAAoB,IAAhBA,EAAKnF,UAC9CwE,EAAa,CAAEe,UAAWA,EAAUzD,OAAQ2D,YAAaA,EAAY3D,UAYzE4D,KAEC,CAACzB,EAAOE,EAAaE,IAGtB,kBAACN,GAAajK,SAAd,CAAuBC,MAAO,CAAEkK,QAAOM,YAAWE,cAAaC,mBAC5D3L,I,oDCeQ4M,I,OAjHmB,SAAC,GAA8B,IAA5BtE,EAA2B,EAA3BA,SAAUuE,EAAiB,EAAjBA,WAAiB,EAC2B9J,qBAAWnD,GAA5FF,EADsD,EACtDA,OAAQW,EAD8C,EAC9CA,WAAYE,EADkC,EAClCA,mBAAoBU,EADc,EACdA,aAAcT,EADA,EACAA,aAAcI,EADd,EACcA,SADd,EAEpCT,mBAAS,IAF2B,mBAEvD2M,EAFuD,KAEhDC,EAFgD,OAGxB5M,mBAAS,IAHe,mBAGvD6M,EAHuD,KAG1CC,EAH0C,OAIhB9M,oBAAS,GAJO,mBAIvD+M,EAJuD,KAIrCC,EAJqC,OAKtChN,oBAAS,GAL6B,mBAKvDwD,EALuD,KAKjDC,EALiD,KAMxDwJ,EAAc9E,IAAa9B,IAAmBqG,EACvCQ,EAAkD7M,EAAvDiF,IAA2B6H,EAA4B9M,EAAlCe,KAAwBkH,EAAUjI,EAAViI,MAE/C8E,EAAkB,WACtB3J,GAAQ,IAGJ4J,EAAc,WAClB5J,GAAQ,GACRuJ,GAAkB,IAGpBrJ,qBAAU,WACR,GAAIsJ,GAAcP,EAAY,CAAC,IACrBC,EAAuBD,EAAvBC,MAAOE,EAAgBH,EAAhBG,YACf9D,EAAc4D,EAAOE,MAEtB,CAACI,EAAYP,EAAYlJ,IAE5B,IAIMwF,EAAY,uCAAG,WAAOC,GAAP,SAAApC,EAAA,yDACnBoC,EAAEC,iBACF8D,GAAkB,GAClBlM,KAEAmM,EALmB,gCAKAK,IALA,+CAKwBC,IALxB,QAMnBF,IATAtE,EAAc,GAAI,IAGC,4CAAH,sDAUZwE,EAAY,uCAAG,8BAAA1G,EAAA,sDACb7F,EAAO,CAAEsE,IAAK4H,EAAgB5E,SAC9BuD,EAAU,CAAEc,QAAOE,cAAaW,UAAWC,KAAKC,MAAO1M,QAC7DzB,EAAOoM,KAAK,aAAcE,GAHP,2CAAH,qDAMZyB,EAAa,uCAAG,4BAAAzG,EAAA,sDAChB6F,IACIzB,EAAc,CAAE3F,IAAKoH,EAAWpH,IAAKqH,QAAOE,cAAa/F,OAAQ4F,EAAW5F,OAAQ9F,KAAM0L,EAAW1L,MACtF2M,EAAajB,EAAYzB,IAK5C/K,EAAWmD,GACXjD,EAAmBkD,IAHnB/D,EAAOoM,KAAK,aAAc,CAAEV,cAAaiC,iBAAgBC,sBANzC,2CAAH,qDAcbQ,EAAe,SAACjB,EAAkBzB,GACtC,IAAI2C,GAAe,EAC6BC,GAAqBnB,EAA7DpH,IAA6DoH,EAAxD1L,KAAwD0L,EAAxCc,UAAwCd,EAA7BoB,IAFoB,aAESpB,EAFT,mCAGvBqB,GAAsB9C,EAAnD3F,IAAmD2F,EAAtCjK,KAHuC,aAGDiK,EAHC,iBAY5D,OAPA+C,OAAOC,KAAKJ,GAAkBK,OAC9BF,OAAOC,KAAKF,GAAmBG,OAE3BjN,KAAK+B,UAAU6K,KAAsB5M,KAAK+B,UAAU+K,KACtDH,GAAe,GAGVA,GAGH7E,EAAgB,SAAC4D,EAAeE,GACpCD,EAASD,GACTG,EAAeD,IAGjB,OACE,oCACE,yBAAK5J,UAAU,4BACZgK,EACC,kBAAC5I,EAAA,EAAD,CAAYC,QAAS8I,GACnB,kBAAC,KAAD,OAGF,kBAACvI,EAAA,EAAD,CAAQN,MAAM,UAAUP,QAAQ,YAAYM,QAAS8I,GAArD,aAIJ,kBAAC5I,EAAA,EAAD,CAAQvB,UAAU,SAASO,KAAMA,EAAMM,QAASuJ,EAAac,kBAAgB,qBAC3E,kBAACzJ,EAAA,EAAD,CAAezB,UAAWxC,EAAW,OAAS,IAC5C,yBAAKwC,UAAW,mBAAqBxC,EAAW,OAAS,KACvD,kBAAC2I,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAAClD,EAAA,EAAD,CAAYjD,UAAU,OAAOoG,UAAU,KAAKrF,QAAQ,MAAMiJ,EAAa,OAAS,MAAhF,SACA,0BAAM3D,SAAUN,GACd,kBAACO,GAAA,EAAD,CAAWC,UAAQ,EAACxF,QAAQ,WAAWyF,OAAO,SAASC,WAAS,EAACC,MAAM,QAAQC,aAAa,QAAQ/I,MAAO8L,EAAOvJ,SAAU,SAAC6F,GAAD,OAAO2D,EAAS3D,EAAElG,OAAOlC,UACrJ,kBAAC0I,GAAA,EAAD,CAAWC,UAAQ,EAACxF,QAAQ,WAAWyF,OAAO,SAASC,WAAS,EAACC,MAAM,cAAcC,aAAa,cAAc/I,MAAOgM,EAAazJ,SAAU,SAAC6F,GAAD,OAAO6D,EAAe7D,EAAElG,OAAOlC,UAC7K,yBAAKoC,UAAW,oBAAsBxC,EAAW,OAAS,KACxD,kBAACoE,EAAA,EAAD,CAAQuJ,SAAUrB,EAAkBrL,KAAK,UAAzC,QACA,kBAACmD,EAAA,EAAD,CAAQP,QAAS+I,EAAa3L,KAAK,UAAnC,kBC7ED2M,GAjCC,WAAO,IAAD,EACgBzL,qBAAWnD,GAAvCc,EADY,EACZA,QAASI,EADG,EACHA,eADG,EAEoBiC,qBAAWiI,IAA3CU,EAFY,EAEZA,YAAaC,EAFD,EAECA,eACfrH,EAAUC,cAMhB,OACE,oCACE,kBAACkK,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI9N,EAAiB,GAAK,EAAG+N,GAAI/N,EAAiB,GAAK,IACxE,kBAAC,GAAD,CAAUwH,SAAU9B,IACnB9F,GAAW,kBAACsE,EAAA,EAAD,CAAQ5B,UAAU,OAAOsB,MAAM,UAAUP,QAAQ,YAAYM,QARvD,WACtBH,EAAQW,KAAK,gBAOG,cAGd,kBAACwJ,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI9N,EAAiB,GAAK,EAAG+N,GAAI/N,EAAiB,GAAK,IACxE,kBAAC4I,GAAA,EAAD,CACEoF,MAAO,CAAEC,MAAOjO,EAAiB,MAAQ,IACzCsC,UAAWtC,EAAiB,GAAK,YACjC+I,WAAY/I,EACZqD,QAAQ,WACRyF,OAAO,SACPE,MAAM,SACNC,aAAa,SACb/I,MAAO0K,EACPnI,SAAU,SAAA6F,GAAC,OAAIuC,EAAgBvC,EAAElG,OAA4BlC,a,qBCmBxDgO,GA3CqB,SAAC,GAAc,IAAZ5C,EAAW,EAAXA,KAAW,EACxBjM,oBAAS,GADe,mBACzCwD,EADyC,KACnCC,EADmC,OAEfb,qBAAWnD,GAApCF,EAFwC,EAExCA,OAAQc,EAFgC,EAEhCA,aAMVgN,EAAc,WAClB5J,GAAQ,IAGJqL,EAAU,uCAAG,4BAAAjI,EAAA,sDACjBtH,EAAOoM,KAAK,aAAc,CACxBoD,OAAQ9C,EAAK3G,IACb0J,WAAU,UAAE/C,EAAKjL,YAAP,aAAE,EAAWsE,IACvB4H,eAAgB7M,EAAaiF,IAC7B6H,iBAAkB9M,EAAae,OAEjCqC,GAAQ,GAPS,2CAAH,qDAUhB,OACE,oCACE,kBAACY,EAAA,EAAD,CAAYC,QApBQ,WACtBb,GAAQ,KAoBJ,kBAAC,KAAD,OAEF,kBAACe,EAAA,EAAD,CAAQvB,UAAU,SAASO,KAAMA,EAAMM,QAASuJ,GAC9C,kBAAC5I,EAAA,EAAD,CAAaxB,UAAU,eAAvB,kBACA,kBAACyB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAmB1B,UAAU,gBAA7B,mCACmCgJ,EAAKU,MADxC,OAIF,kBAAC/H,EAAA,EAAD,CAAe3B,UAAU,0BACvB,kBAAC4B,EAAA,EAAD,CAAQP,QAASwK,GAAjB,OACA,kBAACjK,EAAA,EAAD,CAAQP,QAAS+I,GAAjB,cCnCJ4B,I,OAAc,SAACC,GACnB,OAAsB,IAAfA,IA2DMC,GAnDc,WAAO,IAAD,EACFvM,qBAAWiI,IAAlCE,EADyB,EACzBA,MAAOQ,EADkB,EAClBA,YADkB,EAEyB3I,qBAAWnD,GAA7DF,EAFyB,EAEzBA,OAAQc,EAFiB,EAEjBA,aAAcE,EAFG,EAEHA,QAASI,EAFN,EAEMA,eAC1BuM,EAA2C7M,EAAhDiF,IAA2B6H,EAAqB9M,EAA3Be,KACvBgO,EAAgBrE,EAAMuB,QAAO,SAACL,GAAD,OAAgBA,EAAKU,MAAM0C,cAAcnI,SAASqE,EAAY8D,kBAO3FC,EAAkB,SAACrD,GAAgB,IAAD,EACtC,OAAO1L,IAAW,UAAA0L,EAAKjL,YAAL,eAAWsE,OAAQ4H,GAGvC,OACE,kBAACoB,GAAA,EAAD,CAAMiB,WAAS,EAACC,QAAS,EAAGC,QAAQ,SAASxM,UAAU,0BACnDtC,GAAkB,kBAAC,GAAD,MAEnByO,EAAchF,KAAI,SAAC6B,GAAD,MAxBJyD,EAwBI,OACjB,kBAACpB,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGlE,IAAKyB,EAAK3G,IAAKrC,UAAYgM,GAAYhD,EAAKnF,QAAyB,eAAf,cACrF,kBAAC6I,GAAA,EAAD,CAAM5L,UAAW,EAAGd,UAAW,SAAWqM,EAAgBrD,GAAQ,GAAK,SACrE,kBAAC2D,GAAA,EAAD,CAAa3M,UAAU,gBACrB,kBAACiD,EAAA,EAAD,CAAY2J,cAAY,EAAC7L,QAAQ,KAAKqF,UAAU,KAAKpG,UAAU,SAASgJ,EAAKU,OAC7E,kBAACzG,EAAA,EAAD,CAAYlC,QAAQ,YAAYf,UAAU,eAAegJ,EAAKY,aAC9D,yBAAK5J,UAAU,gBACb,kBAACiD,EAAA,EAAD,CAAYlC,QAAQ,YAAYO,MAAM,iBAAtC,UAAuD0H,EAAKjL,YAA5D,aAAuD,EAAWsH,OAClE,kBAACpC,EAAA,EAAD,CAAYlC,QAAQ,YAAYO,MAAM,iBAAtC,gBAhCKmL,EAgC0EzD,EAAKuB,UA/BnF,IAAIsC,KAAKC,eAAe,SACzBC,OAAO,IAAIvC,KAAKiC,IAAOO,MAAM,KAAKC,KAAK,SAiC3C,kBAACC,GAAA,EAAD,CAAalN,UAAU,mBACpBqM,EAAgBrD,IACf,6BACE,kBAAC,GAAD,CAAYA,KAAMA,IAClB,kBAAC,GAAD,CAAU9D,SAAU9B,GAAgBqG,WAAYT,IAChD,kBAACrB,GAAA,EAAD,CACEzH,QAAS8L,GAAYhD,EAAKnF,QAC1B1D,SAAU,kBA/BL6H,EA+ByBgB,GA9BlCnF,OAAUmI,GAAYhE,EAAYnE,QAAmCmE,EAAYnE,OAAS,EAA9CmE,EAAYnE,OAAS,OAC7EvH,EAAOoM,KAAK,aAAc,CAAEV,cAAaiC,iBAAgBC,qBAFrC,IAAClC,GAgCL1G,MAAM,UACN6L,WAAY,CAAE,aAAc,oBAC5BnN,UAAU,kBC3CfoN,I,OAXkB,WAAO,IAC9B1P,EAAmBiC,qBAAWnD,GAA9BkB,eAER,OACE,yBAAKsC,UAAU,2BACb,kBAACiD,EAAA,EAAD,CAAYmD,UAAU,KAAKrF,QAAQ,KAAKf,UAAW,UAAYtC,EAAiB,mBAAqB,SAArG,SACA,kBAAC,GAAD,SCRA2P,GAAiB,uCAAG,WAAOC,GAAP,iBAAA1J,EAAA,6DAClBO,EAAUd,GAAeF,GADP,SAENiB,MAAM,GAAD,OAJb,YAIa,YAAckJ,EAAd,UAA8BnJ,GAF7B,cAElBR,EAFkB,yBAGjBD,GAAeC,IAHE,2CAAH,sD,4DCoGR4J,I,OAjGK,WAAO,IAAD,EACyB5N,qBAAWnD,GAApDkB,EADgB,EAChBA,eAAgBN,EADA,EACAA,aAAcd,EADd,EACcA,OADd,EAEES,mBAAiB,IAFnB,mBAEjByQ,EAFiB,KAEVC,EAFU,KAGXC,EAAmDtQ,EAAxDiF,IAA6BoG,EAA2BrL,EAA3CmI,eAAsBoI,EAAqBvQ,EAArBuQ,iBACrCC,EAAkB,SAAC7P,GAAD,OAAgBA,EAAKsE,MAAQjF,EAAaiF,KAC5DwL,EAASL,EAAMnE,QAAO,SAACtL,GAAD,OAAgB6P,EAAgB7P,IAAuB,IAAdA,EAAKI,QACpE2P,EAAeN,EAAMnE,QAAO,SAACtL,GAAD,OAAgB6P,EAAgB7P,IAAuB,IAAdA,EAAKI,QAEhFuC,qBAAU,WAUJ+H,GATa,uCAAG,gCAAA7E,EAAA,sEACKyJ,GAAkB5E,GADvB,OACZ9E,EADY,OAGd+J,IACIK,EADI,UACsBpK,EAAIK,YAD1B,aACsB,EAAUwJ,MAAMnE,QAAO,SAACtL,GAAD,OAAgB6P,EAAgB7P,MACvF0P,EAASM,IALO,2CAAH,oDAUfC,KAID,CAAC5Q,IAEJsD,qBAAU,WASR,OARIpE,GACFA,EAAOqM,GAAG,sBAAsB,SAACsF,GAC3BA,GACFR,GAAS,SAACS,GAAD,6BAA2BA,GAA3B,CAAsCD,UAK9C,kBAAM3R,EAAOwM,wBAEnB,CAACxM,IAQJ,IAAM6R,EAAgC,SAAC,GAA6B,IAA3BpQ,EAA0B,EAA1BA,KAAM4H,EAAoB,EAApBA,OAAQ0B,EAAY,EAAZA,MACrD,OACE,kBAAC+G,GAAA,EAAD,CAAUpP,QAAM,EAACgB,UAAW,cAAgBqH,IAAU1B,EAAS,EAAI,OAAS,KAC1E,kBAAC0I,GAAA,EAAD,KACE,kBAAClI,GAAA,EAAD,CAAQtD,IAAI,SAASF,IAAG,uDAAkD0E,EAAQ,EAAIA,EAAQ,EAAI,EAA1E,WAE1B,kBAACiH,GAAA,EAAD,CAAc5P,QAAO,UAAKX,EAAKoH,UAAV,YAAuBpH,EAAKqH,cAKvD,OAAO1H,EAEH,kBAAC6Q,GAAA,EAAD,CAAQxN,QAAQ,YAAYf,UAAU,gBACpC,yBAAKA,UAAU,kBACb,kBAACwO,GAAA,EAAD,CAAMxO,UAAU,QACd,kBAACoO,GAAA,EAAD,CAAUpP,QAAM,EAACgB,UAAU,gCACzB,kBAACsO,GAAA,EAAD,CAAc5P,QAASiP,KAGxBE,EAAOlI,OAAS,GACf,oCACE,kBAAC8I,GAAA,EAAD,CAASzO,UAAU,YACnB,kBAACoO,GAAA,EAAD,CAAUpP,QAAM,EAACgB,UAAU,eACzB,kBAACsO,GAAA,EAAD,CAAc5P,QAAQ,YAEvBmP,EAAO1G,KAAI,SAACpJ,EAAYsJ,GAAb,OACV,kBAAC8G,EAAD,CAAQpQ,KAAMA,EAAM4H,OAAQkI,EAAOlI,OAAQ0B,MAAOA,EAAOE,IAAKxJ,EAAKsE,UAKxEyL,EAAanI,OAAS,GACrB,oCACE,kBAAC8I,GAAA,EAAD,CAASzO,UAAU,YAEnB,kBAACoO,GAAA,EAAD,CAAUpP,QAAM,EAACgB,UAAU,eACzB,kBAACsO,GAAA,EAAD,CAAc5P,QAAQ,WAEvBoP,EAAa3G,KAAI,SAACpJ,EAAYsJ,GAAb,OAChB,kBAAC8G,EAAD,CAAQpQ,KAAMA,EAAM4H,OAAQmI,EAAanI,OAAQ0B,MAAOA,EAAOE,IAAKxJ,EAAKsE,aASrF,uCC/ESqM,I,OAdM,WAAO,IAAD,EACW/O,qBAAWnD,GAAvCkB,EADiB,EACjBA,eAAgBJ,EADC,EACDA,QAClB4E,EAAWC,cAGjB,OAF2C,WAAtBD,EAASE,UAA+C,MAAtBF,EAASE,WAEzC1E,EACrB,kBAAC6Q,GAAA,EAAD,CAAQxN,QAAQ,YAAYf,UAAU,gBAAgB2O,OAAO,SAC3D,yBAAK3O,UAAW,mBAAqB1C,EAAU,QAAU,cACvD,kBAAC,GAAD,QAGD,uCCoBQsR,GAxB6B,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,UAC3D3R,EAAec,aAAad,cAAgBY,KAAKC,MAAMC,aAAad,cACpE4R,EAAYF,EAAsC,KAAX,OAAZ1R,QAAY,IAAZA,OAAA,EAAAA,EAAce,MAAjB,OAA8Bf,QAA9B,IAA8BA,OAA9B,EAA8BA,EAAciF,IAE1E,OACE,kBAAC,IAAD,CAAOwM,KAAMA,EAAMI,OAAQ,kBAAMD,EAC/B,kBAAC,GAAD,KACE,kBAAC3D,GAAA,EAAD,CAAMiB,WAAS,EAACE,QAAQ,UACtB,kBAACnB,GAAA,EAAD,CAAMC,MAAI,GACR,kBAAC,GAAD,OAEF,kBAACD,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIE,GAAI,EAAGyD,GAAI,GAAIxD,MAAO,CAAEyD,UAAW,UACpD,kBAACJ,EAAD,OAEF,kBAAC1D,GAAA,EAAD,CAAMC,MAAI,GACR,kBAAC,GAAD,SAKN,kBAAC,IAAD,CAAU8D,GAAG,eCnBJC,GAN+B,SAAC,GAAyB,IAAvBR,EAAsB,EAAtBA,KAAME,EAAgB,EAAhBA,UACrD,OACE,kBAAC,IAAD,CAAOF,KAAMA,EAAMI,OAAQ,SAAAK,GAAK,OAAKpR,aAAad,aAA0C,kBAAC,IAAD,CAAUgS,GAAG,WAAxC,kBAACL,EAAcO,OCIrEC,GANuB,WACpC,OACE,kBAAC,IAAD,CAAON,OAAQ,kBAAM/Q,aAAad,aAAe,kBAAC,IAAD,CAAUgS,GAAG,WAAc,kBAAC,IAAD,CAAUA,GAAG,e,UCuE9EI,GA3Ea,WAAO,IAAD,EACY7P,qBAAWnD,GAA/CK,EADwB,EACxBA,MAAOW,EADiB,EACjBA,SAAUE,EADO,EACPA,eACjB0K,EAAczI,qBAAWiI,IAAzBQ,UACFlH,EAAUC,cACVsO,EAAgC,SAAV5S,EAAmB,UAAY,UACrD6S,EAA6B,SAAV7S,EAAmB,QAAU,QAEhD8S,EAAa,CACjBC,OAAQ,CAAC,aAAc,gBACvBC,SAAU,CAAC,CACTnJ,MAAO,aACP1C,KAAM,CAACoE,EAAUgB,UAAW,GAC5B/J,gBAAiBoQ,EACjBK,aAAc,GACdC,YAAa,GAEf,CACErJ,MAAO,eACP1C,KAAM,CAAC,EAAGoE,EAAUkB,aACpBjK,gBAAiB,UACjByQ,aAAc,GACdC,YAAa,KAQjB,OACE,yBAAK/P,UAAWtC,EAAiB,QAAU,IACzC,kBAACkE,EAAA,EAAD,CAAQ5B,UAAU,OAAOe,QAAQ,YAAYO,MAAM,UAAUD,QANxC,WACvBH,EAAQW,KAAK,YAKX,QAEA,yBAAK6J,MAAO,CAAEsE,UAAW,QAASC,UAAWzS,EAAW,OAAS,KAC/D,kBAAC,KAAD,CACEwG,KAAM2L,EACNxL,QAAS,CACP+L,qBAAqB,EACrBxG,MAAO,CACLyG,SAAS,EACTC,KAAM,eACNC,SAAU,GACVC,UAAWZ,GAEba,OAAQ,CACNX,OAAQ,CACNU,UAAWZ,IAGfc,OAAQ,CACNC,MAAO,CAAC,CACNC,UAAW,CACTP,SAAS,GAEXQ,MAAO,CACLL,UAAWZ,KAGfkB,MAAO,CAAC,CACNF,UAAW,CACTpP,MAAiB,SAAVzE,EAAmB,wBAA0B,WAEtD8T,MAAO,CACLE,aAAa,EACbP,UAAWZ,YCtCdoB,gBApBa,WAC1B,IAAM5O,EAAWC,cAEjB,OACE,oCACE,kBAAC,EAAD,MACA,kBAAC4O,EAAA,EAAD,CAAW/Q,UAAU,YAAYgR,SAAiC,WAAtB9O,EAASE,UAA+C,cAAtBF,EAASE,SAA4B,KAAO,MACxH,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAsB6O,OAAK,EAACpC,KAAK,SAASE,UAAWnJ,KACrD,kBAAC,GAAD,CAAsBqL,OAAK,EAACpC,KAAK,YAAYE,UAAWlI,KACxD,kBAAC,GAAD,CAAoBoK,OAAK,EAACpC,KAAK,SAASE,UAAW3B,KACnD,kBAAC,GAAD,CAAoB6D,OAAK,EAACpC,KAAK,aAAaC,cAAc,EAAMC,UAAWS,KAC3E,kBAAC,GAAD,CAAcT,UAAW3B,MAE3B,kBAAC,EAAD,WCHO8D,I,OAhBH,WACV,IAAMC,EAAoBjT,aAAarB,OAASmB,KAAKC,MAAMC,aAAarB,OADxD,EAEUE,mBAASoU,GAAwC,QAF3D,mBAETtU,EAFS,KAEFC,EAFE,KAIhB,OACE,kBAAC,EAAD,CAAoBD,MAAOA,EAAOC,SAAUA,GAC1C,kBAACsU,EAAA,EAAD,CAAevU,MAAiB,UAAVA,EAAoByB,EAAagB,GACrD,kBAAC+R,EAAA,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,GAAD,WCLUC,QACW,cAA7BxO,OAAOZ,SAASqP,UAEa,UAA7BzO,OAAOZ,SAASqP,UAEhBzO,OAAOZ,SAASqP,SAASC,MACvB,2DCbJC,IAASxC,OAAO,kBAAE,GAAF,MAAUyC,SAASC,eAAe,SDsI5C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAMnV,c","file":"static/js/main.4964d4ef.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/appIcon.0f30bf67.png\";","import React, { createContext, useState, Dispatch, SetStateAction, Context } from \"react\";\r\nimport { useMediaQuery } from \"@material-ui/core\";\r\nimport { User } from \"../interfaces/interfaces\";\r\nimport io from \"socket.io-client\";\r\nlet socket = io();\r\n\r\ninterface Props {\r\n  theme: string;\r\n  setTheme: Dispatch<SetStateAction<string>>;\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst AppContext: Context<any> = createContext(undefined);\r\n\r\nconst AppContextProvider: React.FC<Props> = ({ children, theme, setTheme }) => {\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messageSeverity, setMessageSeverity] = useState(\"\");\r\n  const [loggedInUser, setLoggedInUser] = useState<User | {}>({});\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const isMobile = useMediaQuery(\"(max-width:599px)\");\r\n  const isDrawerOpened = useMediaQuery(\"(min-width:1200px)\");\r\n\r\n  const getUserFromLS = () => {\r\n    const user = JSON.parse(localStorage.loggedInUser);\r\n    setLoggedInUser(user);\r\n    setIsAdmin(user.role === 0);\r\n  };\r\n\r\n  const disconnect = () => {\r\n    localStorage.clear();\r\n    socket.disconnect();\r\n    socket = io();\r\n    setLoggedInUser({});\r\n    setIsAdmin(false);\r\n  };\r\n\r\n  const clearMessage = () => {\r\n    setMessage(\"\");\r\n    setMessageSeverity(\"\");\r\n  };\r\n\r\n  return (\r\n    <AppContext.Provider value={{\r\n      message, messageSeverity, setMessage, setMessageSeverity, clearMessage, theme, setTheme, socket,\r\n      loggedInUser, isAdmin, getUserFromLS, disconnect, isMobile, isDrawerOpened\r\n    }}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport { AppContext, AppContextProvider };","import React, { useContext } from \"react\";\r\nimport { AppContext } from \"../../contexts/AppContext\";\r\nimport { Radio, createMuiTheme } from \"@material-ui/core\";\r\n\r\nconst lightTheme = createMuiTheme({\r\n  palette: {\r\n    type: \"light\",\r\n    primary: {\r\n      main: \"#4f8a8b\",\r\n      contrastText: \"#fff\"\r\n    },\r\n    secondary: {\r\n      main: \"#fff\",\r\n      contrastText: \"#fff\"\r\n    },\r\n    success: {\r\n      main: \"#4f8a8b\",\r\n      contrastText: \"#fff\"\r\n    }\r\n  },\r\n  typography: {\r\n    button: {\r\n      textTransform: \"capitalize\"\r\n    }\r\n  },\r\n  overrides: {\r\n    MuiAvatar: {\r\n      colorDefault: {\r\n        backgroundColor: \"#4f8a8b\"\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nconst darkTheme = createMuiTheme({\r\n  palette: {\r\n    type: \"dark\",\r\n    primary: {\r\n      main: \"#c26565\"\r\n    },\r\n    secondary: {\r\n      main: \"#fff\"\r\n    },\r\n    success: {\r\n      main: \"#c26565\",\r\n      contrastText: \"#fff\"\r\n    }\r\n  },\r\n  typography: {\r\n    button: {\r\n      textTransform: \"capitalize\"\r\n    }\r\n  },\r\n  overrides: {\r\n    MuiCard: {\r\n      root: {\r\n        border: \"2px solid #000\"\r\n      }\r\n    },\r\n    MuiAvatar: {\r\n      colorDefault: {\r\n        backgroundColor: \"#c26565\"\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nconst Theme: React.FC = () => {\r\n  const { theme, setTheme } = useContext(AppContext);\r\n\r\n  const handleThemeChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setTheme(event.target.value);\r\n    localStorage.theme = JSON.stringify(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"mr-3\">\r\n      <Radio value=\"dark\" checked={theme === \"dark\"} onChange={handleThemeChange} />\r\n      <Radio value=\"light\" checked={theme === \"light\"} onChange={handleThemeChange} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { Theme, lightTheme, darkTheme };","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { AppContext } from \"../../contexts/AppContext\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\nconst messages = {\r\n  fillCorrectly: \"Please fill out form correctly\",\r\n  notChanged: \"didn't changed\",\r\n  created: \"created successfully\",\r\n  updated: \"updated successfully\",\r\n  deleted: \"deleted successfully\"\r\n};\r\n\r\nconst messageSeverities = {\r\n  SUCCESS: \"success\",\r\n  ERROR: \"error\",\r\n  WARNING: \"warning\"\r\n};\r\n\r\nconst Message: React.FC = () => {\r\n  const { message, messageSeverity, clearMessage } = useContext(AppContext);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const closeMessage = () => {\r\n    clearMessage();\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    message ? setOpen(true) : closeMessage();\r\n\r\n    // eslint-disable-next-line\r\n  }, [message]);\r\n\r\n  return (\r\n    <>\r\n      {message && messageSeverity && <Snackbar open={open} autoHideDuration={3000} onClose={() => closeMessage()}>\r\n        <MuiAlert elevation={6} variant=\"filled\" severity={messageSeverity} onClose={() => closeMessage()}>{message}</MuiAlert>\r\n      </Snackbar>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport { Message, messages, messageSeverities };","import React, { useState, useContext } from \"react\";\r\nimport { IconButton, Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AppContext } from \"../../contexts/AppContext\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\n\r\nconst Logout: React.FC = () => {\r\n  const { disconnect } = useContext(AppContext);\r\n  const [open, setOpen] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const logout = () => {\r\n    disconnect();\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <IconButton onClick={() => setOpen(true)} color=\"secondary\">\r\n        <ExitToAppIcon />\r\n      </IconButton>\r\n      <Dialog className=\"dialog\" open={open} onClose={() => setOpen(false)}>\r\n        <DialogTitle className=\"text-center\">Log out</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText className=\"content-text\">\r\n            Are you sure you want to log out ?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions className=\"justify-content-center\">\r\n          <Button onClick={logout} autoFocus>Yes</Button>\r\n          <Button onClick={() => setOpen(false)}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Logout;","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { AppContext } from \"../../contexts/AppContext\";\r\nimport { Theme } from \"../Theme/Theme\";\r\nimport { AppBar, Toolbar, Typography, Button } from \"@material-ui/core\";\r\nimport Logout from \"../Logout/Logout\";\r\nimport appIcon from \"../../images/appIcon.png\";\r\nimport \"./Navbar.scss\";\r\n\r\nconst Navbar = () => {\r\n  const { loggedInUser } = useContext(AppContext);\r\n  const [buttonText, setButtonText] = useState(\"\");\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    const setAuthRoutesButtonValue = () => {\r\n      const { pathname } = location;\r\n\r\n      if (loggedInUser._id) {\r\n        hideAuthRoutesButton();\r\n      } else {\r\n        pathname === \"/login\" || pathname === \"/\" ? setButtonText(\"register\") : setButtonText(\"login\");\r\n      }\r\n    };\r\n\r\n    setAuthRoutesButtonValue();\r\n\r\n  }, [loggedInUser, location]);\r\n\r\n  const hideAuthRoutesButton = () => {\r\n    setButtonText(\"\");\r\n  };\r\n\r\n  const refreshPage = () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  const navigateToPage = () => {\r\n    history.push(buttonText);\r\n  };\r\n\r\n  return (\r\n    <div className=\"navbar-wrapper\">\r\n      <AppBar position=\"fixed\" className=\"navbar\">\r\n        <Toolbar>\r\n          <img src={appIcon} alt=\"navbar-img\" onClick={refreshPage} height=\"30\" />\r\n          <Typography variant=\"h6\" className=\"title\">TaskSaver</Typography>\r\n          <Theme />\r\n          {loggedInUser._id ?\r\n            <>\r\n              <Typography variant=\"subtitle1\" className=\"username\">{loggedInUser.username}</Typography>\r\n              <Logout />\r\n            </>\r\n            :\r\n            <>\r\n              {buttonText && <Button onClick={navigateToPage} color=\"secondary\">{buttonText}</Button>}\r\n            </>\r\n          }\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;","const restOptions = {\r\n  get: \"GET\",\r\n  post: \"POST\",\r\n  put: \"PUT\",\r\n  delete: \"DELETE\"\r\n};\r\n\r\nconst formTypes = {\r\n  add: \"Add\",\r\n  edit: \"Edit\"\r\n};\r\n\r\nconst setRestOptions = (methodType: string, body?: any) => {\r\n  return {\r\n    method: methodType,\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(body)\r\n  };\r\n};\r\n\r\nconst handleResponse = async (res: Response) => {\r\n  const { status } = res;\r\n  const errorCodes = [400, 401, 404, 500];\r\n  const data = await res.json();\r\n\r\n  if (errorCodes.includes(status)) {\r\n    return { data, success: false };\r\n  }\r\n\r\n  return { data, success: true };\r\n};\r\n\r\nexport { restOptions, formTypes, setRestOptions, handleResponse };","import { restOptions, setRestOptions, handleResponse } from \"./helper\";\r\nimport { User } from \"../interfaces/interfaces\";\r\n\r\nconst prefix = `api/auth`;\r\n\r\nconst loginService = async (body: User) => {\r\n  const options = setRestOptions(restOptions.post, body);\r\n  const res = await fetch(`${prefix}/login`, options);\r\n  return handleResponse(res);\r\n};\r\n\r\nconst registerService = async (body: User) => {\r\n  const options = setRestOptions(restOptions.post, body);\r\n  const res = await fetch(`${prefix}/register`, options);\r\n  return handleResponse(res);\r\n};\r\n\r\ntype FormType = {\r\n  res: any,\r\n  clientInputs?: any,\r\n  history: any,\r\n  setErrorMessage: (message: string) => void\r\n};\r\n\r\nconst handleAuthForm = (args: FormType) => {\r\n  const { res, clientInputs, history, setErrorMessage } = args;\r\n  const { user: resUserData, message } = res.data;\r\n\r\n  if (resUserData) {\r\n    const completeUserData = { ...clientInputs, ...resUserData };\r\n    localStorage.loggedInUser = JSON.stringify(completeUserData);\r\n    history.push(\"/tasks\");\r\n  } else {\r\n    setErrorMessage(message);\r\n  }\r\n};\r\n\r\nexport { loginService, registerService, handleAuthForm };","import { User } from \"../../../interfaces/interfaces\";\r\n\r\nconst emailRegex = new RegExp(/[a-z0-9!#$%&\"*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&\"*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/);\r\nconst nameRegex = new RegExp(/[a-zA-Z][a-zA-Z ]+/);\r\nconst usernameRegex = new RegExp(/^[a-z0-9_-]{3,16}$/i);\r\n\r\nconst authFormTypes = {\r\n  login: \"Login\",\r\n  register: \"Register\"\r\n};\r\n\r\nconst validateUser = (user: User, formType: string) => {\r\n  const { firstName, lastName, username, email, password, role, organizationId } = user;\r\n  const res: { isValid: boolean, errors: string[]; } = { isValid: true, errors: [] };\r\n\r\n  if (!emailRegex.test(email)) {\r\n    res.errors.push(\"Please insert a valid email address\");\r\n  }\r\n\r\n  if (password.length < 3) {\r\n    res.errors.push(\"Password must contain at least 3 characters\");\r\n  }\r\n\r\n  if (formType === authFormTypes.register && firstName && lastName && username) {\r\n    if (!nameRegex.test(firstName)) {\r\n      res.errors.push(\"Please insert a valid first name\");\r\n    }\r\n\r\n    if (!nameRegex.test(lastName)) {\r\n      res.errors.push(\"Please insert a valid last name\");\r\n    }\r\n\r\n    if (!usernameRegex.test(username)) {\r\n      res.errors.push(\"Please insert a valid username\");\r\n    }\r\n\r\n    if (role !== 0 && role !== 1) {\r\n      res.errors.push(\"User role must be 0 or 1\");\r\n    }\r\n\r\n    if (!organizationId) {\r\n      res.errors.push(\"User must belong to an organization\");\r\n    }\r\n  }\r\n\r\n  if (res.errors.length > 0) {\r\n    res.isValid = false;\r\n  }\r\n\r\n  return res;\r\n};\r\n\r\nexport { validateUser, authFormTypes };","\r\nimport React, { useContext, useState, SyntheticEvent } from \"react\";\r\nimport { AppContext } from \"../../contexts/AppContext\";\r\nimport { loginService, handleAuthForm } from \"../../services/auth\";\r\nimport { messageSeverities } from \"../Message/Message\";\r\nimport { validateUser, authFormTypes } from \"./Validator/Validator\";\r\nimport { Avatar, Button, TextField, Typography } from \"@material-ui/core\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport \"./Forms.scss\";\r\n\r\ninterface Props {\r\n  history: History;\r\n}\r\n\r\nconst Login: React.FC<Props> = ({ history }) => {\r\n  const { setMessage, setMessageSeverity, clearMessage } = useContext(AppContext);\r\n  const [formValues, setFormValues] = useState({ email: \"\", password: \"\" });\r\n\r\n  const handleSubmit = async (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    clearMessage();\r\n\r\n    const { email, password } = formValues;\r\n    const formInputs = { email, password };\r\n    const res = validateUser(formInputs, authFormTypes.login);\r\n\r\n    if (res.isValid) {\r\n      const res = await loginService(formInputs);\r\n      handleAuthForm({ res, history, setErrorMessage });\r\n    } else {\r\n      setErrorMessage(res.errors[0]);\r\n    }\r\n  };\r\n\r\n  const setErrorMessage = (message: string) => {\r\n    setMessage(message);\r\n    setMessageSeverity(messageSeverities.ERROR);\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <Avatar>\r\n        <LockOutlinedIcon />\r\n      </Avatar>\r\n      <Typography className=\"mt-1\" component=\"h1\" variant=\"h5\">Login</Typography>\r\n      <form onSubmit={handleSubmit}>\r\n        <TextField required variant=\"outlined\" margin=\"normal\" fullWidth label=\"email\" autoComplete=\"email\" value={formValues.email} onChange={(e) => setFormValues({ ...formValues, email: e.target.value })} />\r\n        <TextField required variant=\"outlined\" margin=\"normal\" fullWidth label=\"password\" autoComplete=\"password\" value={formValues.password} type=\"password\" onChange={(e) => setFormValues({ ...formValues, password: e.target.value })} />\r\n        <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\">Login</Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;","import { restOptions, setRestOptions, handleResponse } from \"./helper\";\r\n\r\nconst prefix = `api/organizations`;\r\n\r\nconst getOrganizationsService = async () => {\r\n  const options = setRestOptions(restOptions.get);\r\n  const res = await fetch(prefix, options);\r\n  return handleResponse(res);\r\n};\r\n\r\nexport { getOrganizationsService };","import React, { useContext, useState, SyntheticEvent, useEffect } from \"react\";\r\nimport { AppContext } from \"../../contexts/AppContext\";\r\nimport { getOrganizationsService } from \"../../services/organizations\";\r\nimport { registerService, handleAuthForm } from \"../../services/auth\";\r\nimport { messageSeverities } from \"../Message/Message\";\r\nimport { validateUser, authFormTypes } from \"./Validator/Validator\";\r\nimport { Avatar, Button, TextField, Typography, FormControlLabel, Checkbox, FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\r\nimport { Organization } from \"../../interfaces/interfaces\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport \"./Forms.scss\";\r\n\r\ninterface Props {\r\n  history: History;\r\n}\r\n\r\nconst Register: React.FC<Props> = ({ history }) => {\r\n  const { setMessage, setMessageSeverity, clearMessage } = useContext(AppContext);\r\n  const [formValues, setFormValues] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    organizations: [],\r\n    organizationId: \"\",\r\n    isAdmin: false\r\n  });\r\n\r\n  useEffect(() => {\r\n    const getOrganizations = async () => {\r\n      const res = await getOrganizationsService();\r\n\r\n      if (res.data?.organizations) {\r\n        setFormValues({ ...formValues, organizations: res.data.organizations });\r\n      }\r\n    };\r\n\r\n    getOrganizations();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const handleSubmit = async (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    clearMessage();\r\n\r\n    const { firstName, lastName, username, email, password, organizationId, isAdmin } = formValues;\r\n    const role = isAdmin ? 0 : 1;\r\n    const formInputs = { firstName, lastName, username, email, password, role, organizationId };\r\n    const res = validateUser(formInputs, authFormTypes.register);\r\n\r\n    if (res.isValid) {\r\n      const res = await registerService(formInputs);\r\n      const clientInputs = { username, role, organizationId };\r\n      handleAuthForm({ res, clientInputs, history, setErrorMessage });\r\n\r\n    } else {\r\n      setErrorMessage(res.errors[0]);\r\n    }\r\n  };\r\n\r\n  const setErrorMessage = (message: string) => {\r\n    setMessage(message);\r\n    setMessageSeverity(messageSeverities.ERROR);\r\n  };\r\n\r\n  return (\r\n    <div className=\"register-container\">\r\n      <Avatar>\r\n        <LockOutlinedIcon />\r\n      </Avatar>\r\n      <Typography className=\"mt-1\" component=\"h1\" variant=\"h5\">Register</Typography>\r\n      <form onSubmit={handleSubmit}>\r\n        <TextField required variant=\"outlined\" margin=\"normal\" fullWidth label=\"first name\" autoComplete=\"first name\" value={formValues.firstName} onChange={(e) => setFormValues({ ...formValues, firstName: e.target.value })} />\r\n        <TextField required variant=\"outlined\" margin=\"normal\" fullWidth label=\"last name\" autoComplete=\"last name\" value={formValues.lastName} onChange={(e) => setFormValues({ ...formValues, lastName: e.target.value })} />\r\n        <TextField required variant=\"outlined\" margin=\"normal\" fullWidth label=\"username\" autoComplete=\"username\" value={formValues.username} onChange={(e) => setFormValues({ ...formValues, username: e.target.value })} />\r\n        <TextField required variant=\"outlined\" margin=\"normal\" fullWidth label=\"email\" autoComplete=\"email\" value={formValues.email} onChange={(e) => setFormValues({ ...formValues, email: e.target.value })} />\r\n        <TextField required variant=\"outlined\" margin=\"normal\" fullWidth label=\"password\" autoComplete=\"password\" value={formValues.password} type=\"password\" onChange={(e) => setFormValues({ ...formValues, password: e.target.value })} />\r\n        <FormControl className=\"org-select\">\r\n          <InputLabel>Organization</InputLabel>\r\n          <Select value={formValues.organizationId} onChange={(e: any) => setFormValues({ ...formValues, organizationId: e.target.value })}>\r\n            {formValues.organizations.map((organization: Organization, index: number) => (\r\n              <MenuItem key={index} value={organization._id}>{organization.name}</MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        <FormControlLabel\r\n          control={<Checkbox color=\"primary\" checked={formValues.isAdmin} onChange={() => setFormValues({ ...formValues, isAdmin: !formValues.isAdmin })} />} label=\"admin\" />\r\n        <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\">Register</Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;","import React, { createContext, useState, useEffect, useContext, SetStateAction, Context } from \"react\";\r\nimport { Task } from \"../interfaces/interfaces\";\r\nimport { AppContext } from \"./AppContext\";\r\nimport { messageSeverities } from \"../components/Message/Message\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\ninterface Props {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst TasksContext: Context<any> = createContext(undefined);\r\n\r\nconst TasksContextProvider: React.FC<Props> = ({ children }) => {\r\n  const { socket, setMessage, setMessageSeverity, getUserFromLS } = useContext(AppContext);\r\n  const [tasks, setTasks] = useState<Task[]>([]);\r\n  const [updatedTask, setUpdatedTask] = useState<SetStateAction<any>>(null);\r\n  const [deletedTaskId, setDeletedTaskId] = useState<SetStateAction<String | null>>(null);\r\n  const [chartData, setChartData] = useState<SetStateAction<{}>>({});\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const loggedInUser = JSON.parse(localStorage.loggedInUser);\r\n  const location = useLocation();\r\n\r\n  const setOperationMessage = (message: string) => {\r\n    setMessage(message);\r\n    setMessageSeverity(messageSeverities.SUCCESS);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUserFromLS();\r\n\r\n    // eslint-disable-next-line\r\n  }, [location]);\r\n\r\n  useEffect(() => {\r\n    if (socket) {\r\n      const room = loggedInUser.organizationId;\r\n      socket.emit(\"joinRoom\", room);\r\n\r\n      socket.on(\"initialTasks\", (tasks: Task[]) => {\r\n        if (tasks) {\r\n          setTasks(tasks);\r\n        }\r\n      });\r\n\r\n      socket.on(\"newTask\", (newTask: Task) => {\r\n        if (newTask) {\r\n          setTasks((prevTasks: Task[]) => [...prevTasks, newTask]);\r\n          setOperationMessage(\"Task added successfully\");\r\n        }\r\n      });\r\n\r\n      socket.on(\"updatedTask\", (updatedTask: Task) => {\r\n        if (updatedTask) {\r\n          setUpdatedTask(updatedTask);\r\n          setOperationMessage(\"Task updated successfully\");\r\n        }\r\n      });\r\n\r\n      socket.on(\"deletedTaskId\", (deletedTaskId: string) => {\r\n        if (deletedTaskId) {\r\n          setDeletedTaskId(deletedTaskId);\r\n          setOperationMessage(\"Task deleted successfully\");\r\n        }\r\n      });\r\n    }\r\n\r\n    return () => socket.removeAllListeners();\r\n\r\n    // eslint-disable-next-line\r\n  }, [socket]);\r\n\r\n  useEffect(() => {\r\n    const updateTasksArray = () => {\r\n      const index = tasks.findIndex((task: Task) => task._id === updatedTask._id);\r\n\r\n      if (index > -1) {\r\n        tasks[index] = { ...tasks[index], ...updatedTask };\r\n        setTasks(tasks);\r\n        setUpdatedTask(null);\r\n      }\r\n    };\r\n\r\n    const removeTaskFromArray = () => {\r\n      const index = tasks.findIndex((task: Task) => task._id === deletedTaskId);\r\n\r\n      if (index > -1) {\r\n        tasks.splice(index, 1);\r\n        setDeletedTaskId(null);\r\n      }\r\n    };\r\n\r\n    const setOpenClosedTasks = () => {\r\n      if (tasks.length > 0) {\r\n        const openTasks = tasks.filter(task => task.status === 0);\r\n        const closedTasks = tasks.filter(task => task.status === 1);\r\n        setChartData({ openTasks: openTasks.length, closedTasks: closedTasks.length });\r\n      }\r\n    };\r\n\r\n    if (tasks) {\r\n      if (updatedTask) {\r\n        updateTasksArray();\r\n      } else if (deletedTaskId) {\r\n        removeTaskFromArray();\r\n      }\r\n    }\r\n\r\n    setOpenClosedTasks();\r\n\r\n  }, [tasks, updatedTask, deletedTaskId]);\r\n\r\n  return (\r\n    <TasksContext.Provider value={{ tasks, chartData, searchValue, setSearchValue }}>\r\n      {children}\r\n    </TasksContext.Provider>\r\n  );\r\n};\r\n\r\nexport { TasksContext, TasksContextProvider };","import React, { useState, useEffect, SyntheticEvent, useContext } from \"react\";\r\nimport { AppContext } from \"../../../contexts/AppContext\";\r\nimport { Task } from \"../../../interfaces/interfaces\";\r\nimport { formTypes } from \"../../../services/helper\";\r\nimport { TextField, Button, Dialog, DialogContent, Avatar, Typography, IconButton } from \"@material-ui/core\";\r\nimport { messages, messageSeverities } from \"../../Message/Message\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\r\nimport \"./TaskForm.scss\";\r\n\r\ninterface Props {\r\n  formType: string;\r\n  taskToEdit?: Task;\r\n}\r\n\r\nconst TaskForm: React.FC<Props> = ({ formType, taskToEdit }) => {\r\n  const { socket, setMessage, setMessageSeverity, clearMessage, loggedInUser, isMobile } = useContext(AppContext);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [isButtonDisabled, setButtonDisabled] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  const isEditType = (formType === formTypes.edit) && taskToEdit;\r\n  const { _id: loggedInUserId, role: loggedInUserRole, email } = loggedInUser;\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setButtonDisabled(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isEditType && taskToEdit) {\r\n      const { title, description } = taskToEdit;\r\n      setFormValues(title, description);\r\n    }\r\n  }, [isEditType, taskToEdit, open]);\r\n\r\n  const resetFormValues = () => {\r\n    setFormValues(\"\", \"\");\r\n  };\r\n\r\n  const handleSubmit = async (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    setButtonDisabled(true);\r\n    clearMessage();\r\n\r\n    isEditType ? await editOperation() : await addOperation();\r\n    handleClose();\r\n    resetFormValues();\r\n  };\r\n\r\n  const addOperation = async () => {\r\n    const user = { _id: loggedInUserId, email };\r\n    const newTask = { title, description, createdAt: Date.now(), user };\r\n    socket.emit(\"createTask\", newTask);\r\n  };\r\n\r\n  const editOperation = async () => {\r\n    if (taskToEdit) {\r\n      const updatedTask = { _id: taskToEdit._id, title, description, status: taskToEdit.status, user: taskToEdit.user };\r\n      const isTasksEqual = compareTasks(taskToEdit, updatedTask);\r\n\r\n      if (!isTasksEqual) {\r\n        socket.emit(\"updateTask\", { updatedTask, loggedInUserId, loggedInUserRole });\r\n      } else {\r\n        setMessage(messages.notChanged);\r\n        setMessageSeverity(messageSeverities.WARNING);\r\n      }\r\n    }\r\n  };\r\n\r\n  const compareTasks = (taskToEdit: Task, updatedTask: Task) => {\r\n    let isTasksEqual = false;\r\n    const { _id, user: taskUser, createdAt, __v, ...taskToEditValues } = taskToEdit;\r\n    const { _id: taskId, user: tUser, ...updatedTaskValues } = updatedTask;\r\n\r\n    Object.keys(taskToEditValues).sort();\r\n    Object.keys(updatedTaskValues).sort();\r\n\r\n    if (JSON.stringify(taskToEditValues) === JSON.stringify(updatedTaskValues)) {\r\n      isTasksEqual = true;\r\n    }\r\n\r\n    return isTasksEqual;\r\n  };\r\n\r\n  const setFormValues = (title: string, description: string) => {\r\n    setTitle(title);\r\n    setDescription(description);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"task-form-button-wrapper\">\r\n        {isEditType ?\r\n          <IconButton onClick={handleClickOpen}>\r\n            <EditIcon />\r\n          </IconButton>\r\n          :\r\n          <Button color=\"primary\" variant=\"contained\" onClick={handleClickOpen}>Add Task</Button>\r\n        }\r\n      </div>\r\n\r\n      <Dialog className=\"dialog\" open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogContent className={isMobile ? \"pt-2\" : \"\"}>\r\n          <div className={\"form-container \" + (isMobile ? \"mb-0\" : \"\")}>\r\n            <Avatar>\r\n              <AssignmentIcon />\r\n            </Avatar>\r\n            <Typography className=\"mt-1\" component=\"h1\" variant=\"h5\">{isEditType ? \"Edit\" : \"Add\"} Task</Typography>\r\n            <form onSubmit={handleSubmit}>\r\n              <TextField required variant=\"outlined\" margin=\"normal\" fullWidth label=\"title\" autoComplete=\"title\" value={title} onChange={(e) => setTitle(e.target.value)} />\r\n              <TextField required variant=\"outlined\" margin=\"normal\" fullWidth label=\"description\" autoComplete=\"description\" value={description} onChange={(e) => setDescription(e.target.value)} />\r\n              <div className={\"buttons-wrapper \" + (isMobile ? \"mt-0\" : \"\")}>\r\n                <Button disabled={isButtonDisabled} type=\"submit\">Save</Button>\r\n                <Button onClick={handleClose} type=\"button\">Cancel</Button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskForm;","import React, { useContext } from \"react\";\r\nimport { AppContext } from \"../../contexts/AppContext\";\r\nimport { TasksContext } from \"../../contexts/TasksContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { formTypes } from \"../../services/helper\";\r\nimport { Grid, TextField, Button } from \"@material-ui/core\";\r\nimport TaskForm from \"../Tasks/TaskForm/TaskForm\";\r\n\r\nconst Actions = () => {\r\n  const { isAdmin, isDrawerOpened } = useContext(AppContext);\r\n  const { searchValue, setSearchValue } = useContext(TasksContext);\r\n  const history = useHistory();\r\n\r\n  const moveToDashboard = () => {\r\n    history.push(\"/dashboard\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid item xs={12} sm={isDrawerOpened ? 12 : 8} md={isDrawerOpened ? 12 : 10}>\r\n        <TaskForm formType={formTypes.add} />\r\n        {isAdmin && <Button className=\"ml-2\" color=\"primary\" variant=\"contained\" onClick={moveToDashboard}>Dashboard</Button>}\r\n      </Grid>\r\n\r\n      <Grid item xs={12} sm={isDrawerOpened ? 12 : 8} md={isDrawerOpened ? 12 : 10}>\r\n        <TextField\r\n          style={{ width: isDrawerOpened ? \"92%\" : \"\" }}\r\n          className={isDrawerOpened ? \"\" : \"mt-0 mb-0\"}\r\n          fullWidth={!isDrawerOpened}\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          label=\"search\"\r\n          autoComplete=\"search\"\r\n          value={searchValue}\r\n          onChange={e => setSearchValue((e.target as HTMLInputElement).value)}\r\n        />\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Actions;","import React, { useState, useContext } from \"react\";\r\nimport { AppContext } from \"../../../contexts/AppContext\";\r\nimport { Task } from \"../../../interfaces/interfaces\";\r\nimport { IconButton, Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from \"@material-ui/core\";\r\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\r\n\r\ninterface Props {\r\n  task: Task;\r\n}\r\n\r\nconst DeleteTask: React.FC<Props> = ({ task }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const { socket, loggedInUser } = useContext(AppContext);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const deleteTask = async () => {\r\n    socket.emit(\"deleteTask\", {\r\n      taskId: task._id,\r\n      taskUserId: task.user?._id,\r\n      loggedInUserId: loggedInUser._id,\r\n      loggedInUserRole: loggedInUser.role\r\n    });\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <IconButton onClick={handleClickOpen}>\r\n        <DeleteOutlineIcon />\r\n      </IconButton>\r\n      <Dialog className=\"dialog\" open={open} onClose={handleClose}>\r\n        <DialogTitle className=\"text-center\">Delete Task...</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText className=\"content-text\">\r\n            Are you sure you want to delete {task.title} ?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions className=\"justify-content-center\">\r\n          <Button onClick={deleteTask}>Yes</Button>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DeleteTask;","import React, { useContext } from \"react\";\r\nimport { AppContext } from \"../../../contexts/AppContext\";\r\nimport { Task } from \"../../../interfaces/interfaces\";\r\nimport { formTypes } from \"../../../services/helper\";\r\nimport { Grid, Card, CardContent, Typography, Checkbox, CardActions } from \"@material-ui/core\";\r\nimport { TasksContext } from \"../../../contexts/TasksContext\";\r\nimport Actions from \"../../Actions/Actions\";\r\nimport TaskForm from \"../TaskForm/TaskForm\";\r\nimport DeleteTask from \"../DeleteTask/DeleteTask\";\r\nimport \"./TasksCards.scss\";\r\n\r\nconst isCompleted = (taskStatus: number | undefined) => {\r\n  return taskStatus === 1;\r\n};\r\n\r\nconst displayDate = (date: string) => {\r\n  const l10nHE = new Intl.DateTimeFormat(\"he-IL\");\r\n  return l10nHE.format(new Date(date)).split(\".\").join(\"/\");\r\n};\r\n\r\nconst TasksCards: React.FC = () => {\r\n  const { tasks, searchValue } = useContext(TasksContext);\r\n  const { socket, loggedInUser, isAdmin, isDrawerOpened } = useContext(AppContext);\r\n  const { _id: loggedInUserId, role: loggedInUserRole } = loggedInUser;\r\n  const mathchedTasks = tasks.filter((task: Task) => task.title.toLowerCase().includes(searchValue.toLowerCase()));\r\n\r\n  const setTaskStatus = (updatedTask: Task) => {\r\n    updatedTask.status = !isCompleted(updatedTask.status) ? updatedTask.status = 1 : updatedTask.status = 0;\r\n    socket.emit(\"updateTask\", { updatedTask, loggedInUserId, loggedInUserRole });\r\n  };\r\n\r\n  const isModifyAllowed = (task: Task) => {\r\n    return isAdmin || task.user?._id === loggedInUserId;\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={2} justify=\"center\" className=\"tasks-cards-container\">\r\n      {!isDrawerOpened && <Actions />}\r\n\r\n      {mathchedTasks.map((task: Task) => (\r\n        <Grid item xs={12} sm={8} md={5} key={task._id} className={!isCompleted(task.status) ? \"no-opacity\" : \"half-opacity\"}>\r\n          <Card elevation={6} className={\"card \" + (isModifyAllowed(task) ? \"\" : \"pt-4\")}>\r\n            <CardContent className=\"card-content\">\r\n              <Typography gutterBottom variant=\"h5\" component=\"h2\" className=\"title\">{task.title}</Typography>\r\n              <Typography variant=\"subtitle1\" className=\"description\">{task.description}</Typography>\r\n              <div className=\"user-details\">\r\n                <Typography variant=\"subtitle1\" color=\"textSecondary\">{task.user?.email}</Typography>\r\n                <Typography variant=\"subtitle1\" color=\"textSecondary\">Created at: {displayDate(task.createdAt)}</Typography>\r\n              </div>\r\n            </CardContent>\r\n            <CardActions className=\"actions-wrapper\">\r\n              {isModifyAllowed(task) &&\r\n                <div>\r\n                  <DeleteTask task={task} />\r\n                  <TaskForm formType={formTypes.edit} taskToEdit={task} />\r\n                  <Checkbox\r\n                    checked={isCompleted(task.status)}\r\n                    onChange={() => setTaskStatus(task)}\r\n                    color=\"primary\"\r\n                    inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                    className=\"pb-0\"\r\n                  />\r\n                </div>}\r\n            </CardActions>\r\n          </Card>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default TasksCards;","import React, { useContext } from \"react\";\r\nimport { AppContext } from \"../../../contexts/AppContext\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport TasksCards from \"../TasksCards/TasksCards\";\r\nimport \"./TasksContainer.scss\";\r\n\r\nconst TasksContainer: React.FC = () => {\r\n  const { isDrawerOpened } = useContext(AppContext);\r\n\r\n  return (\r\n    <div className=\"tasks-container-wrapper\">\r\n      <Typography component=\"h1\" variant=\"h5\" className={\"title \" + (isDrawerOpened ? \"text-center mb-4\" : \"mb-2\")}>Tasks</Typography>\r\n      <TasksCards />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TasksContainer;","import { restOptions, setRestOptions, handleResponse } from \"./helper\";\r\n\r\nconst prefix = `api/rooms`;\r\n\r\nconst getAllUsersByRoom = async (roomId: string) => {\r\n  const options = setRestOptions(restOptions.get);\r\n  const res = await fetch(`${prefix}/${roomId}/users`, options);\r\n  return handleResponse(res);\r\n};\r\n\r\nexport { getAllUsersByRoom };","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { AppContext } from \"../../contexts/AppContext\";\r\nimport { getAllUsersByRoom } from \"../../services/rooms\";\r\nimport { User } from \"../../interfaces/interfaces\";\r\nimport { Drawer, List, Divider, ListItem, ListItemText, ListItemAvatar, Avatar } from \"@material-ui/core\";\r\nimport \"./LeftSidebar.scss\";\r\n\r\nconst LeftSidebar = () => {\r\n  const { isDrawerOpened, loggedInUser, socket } = useContext(AppContext);\r\n  const [users, setUsers] = useState<User[]>([]);\r\n  const { _id: userId, organizationId: room, organizationName } = loggedInUser;\r\n  const notLoggedInUser = (user: User) => user._id !== loggedInUser._id;\r\n  const admins = users.filter((user: User) => notLoggedInUser(user) && user.role === 0);\r\n  const regularUsers = users.filter((user: User) => notLoggedInUser(user) && user.role === 1);\r\n\r\n  useEffect(() => {\r\n    const getAllUsers = async () => {\r\n      const res: any = await getAllUsersByRoom(room);\r\n\r\n      if (userId) {\r\n        const usersExceptLoggedInUser = res.data?.users.filter((user: User) => notLoggedInUser(user));\r\n        setUsers(usersExceptLoggedInUser);\r\n      }\r\n    };\r\n\r\n    if (room) {\r\n      getAllUsers();\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n  }, [loggedInUser]);\r\n\r\n  useEffect(() => {\r\n    if (socket) {\r\n      socket.on(\"registrationToRoom\", (newUser: User) => {\r\n        if (newUser) {\r\n          setUsers((prevUsers: User[]) => [...prevUsers, newUser]);\r\n        }\r\n      });\r\n    }\r\n\r\n    return () => socket.removeAllListeners();\r\n\r\n  }, [socket]);\r\n\r\n  interface PersonProps {\r\n    user: User,\r\n    length: number,\r\n    index: number;\r\n  }\r\n\r\n  const Person: React.FC<PersonProps> = ({ user, length, index }) => {\r\n    return (\r\n      <ListItem button className={`list-item ` + (index === length - 1 ? \"last\" : \"\")}>\r\n        <ListItemAvatar>\r\n          <Avatar alt=\"avatar\" src={`https://material-ui.com/static/images/avatar/${index < 7 ? index + 1 : 1}.jpg`} />\r\n        </ListItemAvatar>\r\n        <ListItemText primary={`${user.firstName} ${user.lastName}`} />\r\n      </ListItem>\r\n    );\r\n  };\r\n\r\n  return isDrawerOpened ?\r\n    (\r\n      <Drawer variant=\"permanent\" className=\"left-sidebar\">\r\n        <div className=\"drawer-content\">\r\n          <List className=\"list\">\r\n            <ListItem button className=\"group-title organizationName\">\r\n              <ListItemText primary={organizationName} />\r\n            </ListItem>\r\n\r\n            {admins.length > 0 &&\r\n              <>\r\n                <Divider className=\"divider\" />\r\n                <ListItem button className=\"group-title\">\r\n                  <ListItemText primary=\"Admins\" />\r\n                </ListItem>\r\n                {admins.map((user: User, index: number) => (\r\n                  <Person user={user} length={admins.length} index={index} key={user._id} />\r\n                ))}\r\n              </>\r\n            }\r\n\r\n            {regularUsers.length > 0 &&\r\n              <>\r\n                <Divider className=\"divider\" />\r\n\r\n                <ListItem button className=\"group-title\">\r\n                  <ListItemText primary=\"Users\" />\r\n                </ListItem>\r\n                {regularUsers.map((user: User, index: number) => (\r\n                  <Person user={user} length={regularUsers.length} index={index} key={user._id} />\r\n                ))}\r\n              </>\r\n            }\r\n          </List>\r\n        </div>\r\n      </Drawer>\r\n    ) :\r\n    (\r\n      <></>\r\n    );\r\n};\r\n\r\nexport default LeftSidebar;","import React, { useContext } from \"react\";\r\nimport { AppContext } from \"../../contexts/AppContext\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { Drawer } from \"@material-ui/core\";\r\nimport Actions from \"../Actions/Actions\";\r\nimport \"./RightSidebar.scss\";\r\n\r\nconst RightSidebar = () => {\r\n  const { isDrawerOpened, isAdmin } = useContext(AppContext);\r\n  const location = useLocation();\r\n  const isTasksPanel = location.pathname === \"/tasks\" || location.pathname === \"/\";\r\n\r\n  return isTasksPanel && isDrawerOpened ? (\r\n    <Drawer variant=\"permanent\" className=\"right-sidebar\" anchor=\"right\">\r\n      <div className={\"drawer-content \" + (isAdmin ? \"admin\" : \"not-admin\")}>\r\n        <Actions />\r\n      </div>\r\n    </Drawer>\r\n  ) : (<></>);\r\n};\r\n\r\nexport default RightSidebar;","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router\";\r\nimport { TasksContextProvider } from \"../../contexts/TasksContext\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport LeftSidebar from \"../../components/LeftSidebar/LeftSidebar\";\r\nimport RightSidebar from \"../../components/RightSidebar/RightSidebar\";\r\n\r\ninterface Props {\r\n  exact: boolean;\r\n  path: string;\r\n  isAdminRoute?: boolean;\r\n  Component: React.ComponentType<any>;\r\n}\r\n\r\nconst AuthenticatedRoute: React.FC<Props> = ({ path, isAdminRoute, Component }) => {\r\n  const loggedInUser = localStorage.loggedInUser && JSON.parse(localStorage.loggedInUser);\r\n  const isAllowed = isAdminRoute ? loggedInUser?.role === 0 : loggedInUser?._id;\r\n\r\n  return (\r\n    <Route path={path} render={() => isAllowed ?\r\n      <TasksContextProvider>\r\n        <Grid container justify=\"center\">\r\n          <Grid item>\r\n            <LeftSidebar />\r\n          </Grid>\r\n          <Grid item xs={12} md={9} xl={10} style={{ marginTop: \"100px\" }}>\r\n            <Component />\r\n          </Grid>\r\n          <Grid item>\r\n            <RightSidebar />\r\n          </Grid>\r\n        </Grid>\r\n      </TasksContextProvider>\r\n      :\r\n      <Redirect to=\"/login\" />} />\r\n  );\r\n};\r\n\r\nexport default AuthenticatedRoute;","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router\";\r\n\r\ninterface Props {\r\n  exact: boolean;\r\n  path: string;\r\n  Component: React.ComponentType<any>;\r\n}\r\n\r\nconst UnauthenticatedRoute: React.FC<Props> = ({ path, Component }) => {\r\n  return (\r\n    <Route path={path} render={props => !localStorage.loggedInUser ? <Component {...props} /> : <Redirect to=\"/tasks\" />} />\r\n  );\r\n};\r\n\r\nexport default UnauthenticatedRoute;","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router\";\r\n\r\ninterface Props {\r\n  exact?: boolean;\r\n  path?: string;\r\n  Component: React.ComponentType<any>;\r\n}\r\n\r\nconst DefaultRoute: React.FC<Props> = () => {\r\n  return (\r\n    <Route render={() => localStorage.loggedInUser ? <Redirect to=\"/tasks\" /> : <Redirect to=\"/login\" />} />\r\n  );\r\n};\r\n\r\nexport default DefaultRoute;","import React, { useContext } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { AppContext } from \"../../contexts/AppContext\";\r\nimport { TasksContext } from \"../../contexts/TasksContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Dashboard: React.FC = () => {\r\n  const { theme, isMobile, isDrawerOpened } = useContext(AppContext);\r\n  const { chartData } = useContext(TasksContext);\r\n  const history = useHistory();\r\n  const dataSetColorByTheme = theme === \"dark\" ? \"#c26565\" : \"#4f8a8b\";\r\n  const textColorByTheme = theme === \"dark\" ? \"white\" : \"black\";\r\n\r\n  const chartState = {\r\n    labels: [\"Open Tasks\", \"Closed Tasks\"],\r\n    datasets: [{\r\n      label: \"Open Tasks\",\r\n      data: [chartData.openTasks, 0],\r\n      backgroundColor: dataSetColorByTheme,\r\n      barThickness: 30,\r\n      borderWidth: 2\r\n    },\r\n    {\r\n      label: \"Closed Tasks\",\r\n      data: [0, chartData.closedTasks],\r\n      backgroundColor: \"#f3ecc2\",\r\n      barThickness: 30,\r\n      borderWidth: 2\r\n    }]\r\n  };\r\n\r\n  const backToTasksPanel = () => {\r\n    history.push(\"/tasks\");\r\n  };\r\n\r\n  return (\r\n    <div className={isDrawerOpened ? \"ml-10\" : \"\"}>\r\n      <Button className=\"mb-5\" variant=\"contained\" color=\"primary\" onClick={backToTasksPanel}>Back</Button>\r\n\r\n      <div style={{ minHeight: \"500px\", maxHeight: isMobile ? \"35vh\" : \"\" }}>\r\n        <Bar\r\n          data={chartState}\r\n          options={{\r\n            maintainAspectRatio: false,\r\n            title: {\r\n              display: true,\r\n              text: \"Tasks status\",\r\n              fontSize: 20,\r\n              fontColor: textColorByTheme\r\n            },\r\n            legend: {\r\n              labels: {\r\n                fontColor: textColorByTheme\r\n              }\r\n            },\r\n            scales: {\r\n              xAxes: [{\r\n                gridLines: {\r\n                  display: false\r\n                },\r\n                ticks: {\r\n                  fontColor: textColorByTheme\r\n                }\r\n              }],\r\n              yAxes: [{\r\n                gridLines: {\r\n                  color: theme === \"dark\" ? \"rgba(10, 10, 10, 0.2)\" : \"#E8E8E8\"\r\n                },\r\n                ticks: {\r\n                  beginAtZero: true,\r\n                  fontColor: textColorByTheme\r\n                }\r\n              }]\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;","import React from \"react\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport { Switch, useLocation, withRouter } from \"react-router-dom\";\r\nimport { Message } from \"../components/Message/Message\";\r\nimport Navbar from \"../components/Navbar/Navbar\";\r\nimport Login from \"../components/Forms/Login\";\r\nimport Register from \"../components/Forms/Register\";\r\nimport TasksContainer from \"../components/Tasks/TasksContainer/TasksContainer\";\r\nimport AuthenticatedRoute from \"./Routes/AuthenticatedRoute\";\r\nimport UnauthenticatedRoute from \"./Routes/UnauthenticatedRoute\";\r\nimport DefaultRoute from \"./Routes/DefaultRoute\";\r\nimport Dashboard from \"../components/Dashboard/Dashboard\";\r\n\r\nconst AppRouter: React.FC = () => {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <Container className=\"container\" maxWidth={(location.pathname === \"/login\" || location.pathname === \"/register\") ? \"xs\" : \"lg\"}>\r\n        <Switch>\r\n          <UnauthenticatedRoute exact path=\"/login\" Component={Login} />\r\n          <UnauthenticatedRoute exact path=\"/register\" Component={Register} />\r\n          <AuthenticatedRoute exact path=\"/tasks\" Component={TasksContainer} />\r\n          <AuthenticatedRoute exact path=\"/dashboard\" isAdminRoute={true} Component={Dashboard} />\r\n          <DefaultRoute Component={TasksContainer} />\r\n        </Switch>\r\n        <Message />\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(AppRouter);","import React, { useState } from \"react\";\r\nimport { AppContextProvider } from \"./contexts/AppContext\";\r\nimport { ThemeProvider, CssBaseline } from \"@material-ui/core\";\r\nimport { lightTheme, darkTheme } from \"./components/Theme/Theme\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport AppRouter from \"./AppRouter/AppRouter\";\r\nimport \"./styles/Utils.scss\";\r\n\r\nconst App = () => {\r\n  const userSelectedTheme = localStorage.theme && JSON.parse(localStorage.theme);\r\n  const [theme, setTheme] = useState(userSelectedTheme ? userSelectedTheme : \"dark\");\r\n\r\n  return (\r\n    <AppContextProvider theme={theme} setTheme={setTheme}>\r\n      <ThemeProvider theme={theme === \"light\" ? lightTheme : darkTheme}>\r\n        <CssBaseline />\r\n        <BrowserRouter>\r\n          <AppRouter />\r\n        </BrowserRouter>\r\n      </ThemeProvider>\r\n    </AppContextProvider >\r\n  );\r\n};\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === \"[::1]\" ||\r\n  // 127.0.0.0/8 are considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won\"t work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let\"s check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n            \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It\"s the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can\"t reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(< App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}