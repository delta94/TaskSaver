{"version":3,"sources":["contexts/MessageContext.tsx","styles/Styles.tsx","components/Logout/Logout.tsx","components/Navbar/Navbar.tsx","services/helper.tsx","services/auth.tsx","components/Message/Message.tsx","components/Forms/Validator/Validator.tsx","components/Forms/Login.tsx","components/Forms/Register.tsx","services/tasks.tsx","components/Tasks/TaskForm.tsx","components/Tasks/DeleteTask.tsx","components/Tasks/Tasks.tsx","components/Tasks/TasksContainer.tsx","components/Routes/Page404.tsx","components/Routes/AuthenticatedRoute.tsx","components/Routes/UnauthenticatedRoute.tsx","components/Routes/DefaultRoute.tsx","App.tsx","serviceWorker.tsx","index.tsx","images/appIcon.png"],"names":["MessageContext","createContext","undefined","MessageContextProvider","children","useState","message","setMessage","messageSeverity","setMessageSeverity","Provider","value","clearMessage","header","marginTop","marginBottom","dialog","title","textAlign","dialogActions","justifyContent","contentText","minWidth","overflow","textOverflow","description","fontSize","exitToAppIcon","color","form","makeStyles","theme","paper","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","width","submit","dialogButtonsWrapper","addTaskButton","Logout","open","setOpen","history","useHistory","handleClose","IconButton","onClick","style","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","localStorage","clear","push","autoFocus","useStyles","menuButton","marginRight","flexGrow","img","height","cursor","Navbar","username","loggedInUser","JSON","parse","setLoggedInUser","buttonText","setButtonText","location","useLocation","classes","useEffect","pathname","hideAuthRoutesButton","setAuthRoutesButtonValue","AppBar","position","Toolbar","src","appIcon","alt","className","window","reload","Typography","variant","restOptions","formTypes","setRestOptions","methodType","body","method","headers","token","stringify","handleResponse","res","a","status","errorCodes","json","data","includes","success","loginService","options","fetch","registerService","handleAuthForm","formInputs","setErrorMessage","resUserData","user","messages","messageSeverities","Message","useContext","closeMessage","Snackbar","autoHideDuration","elevation","severity","emailRegex","RegExp","nameRegex","usernameRegex","authFormTypes","validateUser","formType","firstName","lastName","email","password","isValid","errors","test","length","Login","setEmail","setPassword","handleSubmit","e","preventDefault","Container","component","maxWidth","Avatar","onSubmit","TextField","required","fullWidth","label","autoComplete","onChange","target","type","Register","setFirstName","setLastName","setUsername","isAdmin","setIsAdmin","role","FormControlLabel","control","Checkbox","checked","SUCCESS","ERROR","getTasksService","createTaskService","editTaskService","_id","deleteTaskService","taskOperationHandler","IsOperationSucceeded","TaskForm","getTasks","taskToEdit","userId","isEditType","setTitle","setDescription","isButtonDisabled","setButtonDisabled","handleClickOpen","setFormValues","editOperation","addOperation","newTask","createdAt","Date","now","updatedTask","compareTasks","isTasksEqual","taskToEditValues","__v","updatedTaskValues","Object","keys","sort","aria-labelledby","disabled","DeleteTask","task","deleteTask","card","cardContent","userDetails","cardActions","Tasks","tasks","Grid","container","map","date","item","xs","sm","key","Card","CardContent","gutterBottom","Intl","DateTimeFormat","format","split","join","CardActions","TasksContainer","setTasks","setTaskOperationMessage","link","textDecoration","Page404","to","AuthenticatedRoute","path","Component","render","props","UnauthenticatedRoute","DefaultRoute","App","exact","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","module","exports"],"mappings":"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","file":"static/js/main.6a38f2d8.chunk.js","sourcesContent":["import React, { createContext, useState } from \"react\";\r\n\r\ninterface Props {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst MessageContext: any = createContext(undefined);\r\n\r\nconst MessageContextProvider: React.FC<Props> = ({ children }) => {\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messageSeverity, setMessageSeverity] = useState(\"\");\r\n\r\n  const clearMessage = () => {\r\n    setMessage(\"\");\r\n    setMessageSeverity(\"\");\r\n  };\r\n\r\n  return (\r\n    <MessageContext.Provider value={{ message, messageSeverity, setMessage, setMessageSeverity, clearMessage }}>\r\n      {children}\r\n    </MessageContext.Provider>\r\n  );\r\n};\r\n\r\nexport { MessageContext, MessageContextProvider };","import { Theme, makeStyles } from \"@material-ui/core\";\r\n\r\nconst header = {\r\n  marginTop: \"20px\",\r\n  marginBottom: \"10px\"\r\n};\r\n\r\nconst dialog = {\r\n  title: {\r\n    textAlign: \"center\" as \"center\"\r\n  },\r\n  dialogActions: {\r\n    justifyContent: \"center\"\r\n  },\r\n  contentText: {\r\n    minWidth: \"200px\",\r\n    overflow: \"hidden\",\r\n    textOverflow: \"ellipsis\"\r\n  },\r\n  description: {\r\n    fontSize: \"1rem\"\r\n  },\r\n  exitToAppIcon: {\r\n    color: \"white\"\r\n  }\r\n};\r\n\r\nconst form = makeStyles((theme: Theme) => {\r\n  return {\r\n    paper: {\r\n      marginTop: theme.spacing(2),\r\n      marginBottom: theme.spacing(2),\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\"\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main\r\n    },\r\n    form: {\r\n      width: \"100%\",\r\n      marginTop: theme.spacing(1)\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2)\r\n    },\r\n    dialogButtonsWrapper: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      marginTop: \"15px\"\r\n    },\r\n    addTaskButton: {\r\n      marginBottom: \"30px\"\r\n    }\r\n  };\r\n});\r\n\r\nexport { header, dialog, form };","import React, { useState } from \"react\";\r\nimport { IconButton, Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { dialog } from \"../../styles/Styles\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\n\r\nconst Logout: React.FC = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.clear();\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <IconButton onClick={handleClickOpen}>\r\n        <ExitToAppIcon style={dialog.exitToAppIcon} />\r\n      </IconButton>\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle style={dialog.title}>Log out</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Are you sure you want to log out ?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions style={dialog.dialogActions}>\r\n          <Button onClick={logout} color=\"primary\" autoFocus>Yes</Button>\r\n          <Button onClick={handleClose} color=\"primary\">Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Logout;","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, AppBar, Toolbar, Typography } from \"@material-ui/core\";\r\nimport Logout from \"../Logout/Logout\";\r\nimport appIcon from \"../../images/appIcon.png\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  title: {\r\n    flexGrow: 1\r\n  },\r\n  img: {\r\n    height: \"30px\",\r\n    marginRight: \"7px\",\r\n    cursor: \"pointer\"\r\n  }\r\n}));\r\n\r\nconst Navbar: React.FC = () => {\r\n  const username = localStorage.loggedInUser && JSON.parse(localStorage.loggedInUser).username;\r\n  const [loggedInUser, setLoggedInUser] = useState(null);\r\n  const [buttonText, setButtonText] = useState(\"\");\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    const setAuthRoutesButtonValue = () => {\r\n      const { pathname } = location;\r\n\r\n      if (loggedInUser) {\r\n        hideAuthRoutesButton();\r\n      } else {\r\n        pathname === \"/login\" || pathname === \"/\" ? setButtonText(\"register\") : setButtonText(\"login\");\r\n      }\r\n    };\r\n\r\n    setLoggedInUser(localStorage.loggedInUser);\r\n    setAuthRoutesButtonValue();\r\n\r\n  }, [loggedInUser, location]);\r\n\r\n  const hideAuthRoutesButton = () => {\r\n    setButtonText(\"\");\r\n  };\r\n\r\n  const refreshPage = () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  const navigateToPage = () => {\r\n    history.push(buttonText);\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar>\r\n        <img src={appIcon} alt=\"navbar-img\" className={classes.img} onClick={refreshPage} />\r\n        <Typography variant=\"h6\" className={classes.title}>TaskSaver</Typography>\r\n        {loggedInUser ?\r\n          <>\r\n            <Typography variant=\"subtitle1\">{username}</Typography>\r\n            <Logout />\r\n          </> :\r\n          <>\r\n            {buttonText && <Button onClick={navigateToPage} color=\"inherit\">{buttonText}</Button>}\r\n          </>\r\n        }\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Navbar;","const restOptions = {\r\n  get: \"GET\",\r\n  post: \"POST\",\r\n  put: \"PUT\",\r\n  delete: \"DELETE\"\r\n};\r\n\r\nconst formTypes = {\r\n  add: \"Add\",\r\n  edit: \"Edit\"\r\n};\r\n\r\nconst setRestOptions = (methodType: string, body?: any) => {\r\n  return {\r\n    method: methodType,\r\n    headers: { \"Content-Type\": \"application/json\", \"authorization\": `Bearer ${localStorage.token}` },\r\n    body: JSON.stringify(body)\r\n  };\r\n};\r\n\r\nconst handleResponse = async (res: Response) => {\r\n  const { status } = res;\r\n  const errorCodes = [400, 401, 404, 500];\r\n  const data = await res.json();\r\n\r\n  if (errorCodes.includes(status)) {\r\n    return { data, success: false };\r\n  }\r\n\r\n  return { data, success: true };\r\n};\r\n\r\nexport { restOptions, formTypes, setRestOptions, handleResponse };","import { restOptions, setRestOptions, handleResponse } from \"./helper\";\r\nimport { User } from \"../interfaces/interfaces\";\r\n\r\nconst prefix = `api/auth`;\r\n\r\nconst loginService = async (body: User) => {\r\n  const options = setRestOptions(restOptions.post, body);\r\n  const res = await fetch(`${prefix}/login`, options);\r\n  return handleResponse(res);\r\n};\r\n\r\nconst registerService = async (body: User) => {\r\n  const options = setRestOptions(restOptions.post, body);\r\n  const res = await fetch(`${prefix}/register`, options);\r\n  return handleResponse(res);\r\n};\r\n\r\nconst handleAuthForm = (res: any, formInputs: any, history: any, setErrorMessage: (message: string) => void) => {\r\n  const { user: resUserData, token, message } = res.data;\r\n\r\n  if (token) {\r\n    const user = { ...resUserData, ...formInputs };\r\n    localStorage.loggedInUser = JSON.stringify(user);\r\n    localStorage.token = token;\r\n    history.push(\"/tasks\");\r\n  } else {\r\n    setErrorMessage(message);\r\n  }\r\n};\r\n\r\nexport { loginService, registerService, handleAuthForm };","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { MessageContext } from \"../../contexts/MessageContext\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\nconst messages = {\r\n  fillCorrectly: \"Please fill out form correctly\",\r\n  notChanged: \"didn't changed\",\r\n  created: \"created successfully\",\r\n  updated: \"updated successfully\",\r\n  deleted: \"deleted successfully\"\r\n};\r\n\r\nconst messageSeverities = {\r\n  SUCCESS: \"success\",\r\n  ERROR: \"error\",\r\n  WARNING: \"warning\"\r\n};\r\n\r\ninterface Props {\r\n  message?: string;\r\n  messageSeverity?: string;\r\n}\r\n\r\nconst Message: React.FC<Props> = () => {\r\n  const { message, messageSeverity, clearMessage } = useContext(MessageContext);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const closeMessage = () => {\r\n    clearMessage();\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    message ? setOpen(true) : closeMessage();\r\n\r\n    // eslint-disable-next-line\r\n  }, [message]);\r\n\r\n  return (\r\n    <>\r\n      {message && messageSeverity && <Snackbar open={open} autoHideDuration={3000} onClose={() => closeMessage()}>\r\n        <MuiAlert elevation={6} variant=\"filled\" severity={messageSeverity} onClose={() => closeMessage()}>{message}</MuiAlert>\r\n      </Snackbar>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport { Message, messages, messageSeverities };","import { User } from \"../../../interfaces/interfaces\";\r\n\r\nconst emailRegex = new RegExp(/[a-z0-9!#$%&\"*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&\"*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/);\r\nconst nameRegex = new RegExp(/[a-zA-Z][a-zA-Z ]+/);\r\nconst usernameRegex = new RegExp(/^[a-z0-9_-]{3,16}$/);\r\n\r\nconst authFormTypes = {\r\n  login: \"Login\",\r\n  register: \"Register\"\r\n};\r\n\r\nconst validateUser = (user: User, formType: string) => {\r\n  const { firstName, lastName, username, email, password } = user;\r\n  const res: { isValid: boolean, errors: any[]; } = { isValid: true, errors: [] };\r\n\r\n  if (!emailRegex.test(email)) {\r\n    res.errors.push(\"Please insert a valid email address\");\r\n  }\r\n\r\n  if (password.length < 3) {\r\n    res.errors.push(\"Password must contain at least 3 characters\");\r\n  }\r\n\r\n  if (formType === authFormTypes.register && firstName && lastName && username) {\r\n    if (!nameRegex.test(firstName)) {\r\n      res.errors.push(\"Please insert a valid first name\");\r\n    }\r\n\r\n    if (!nameRegex.test(lastName)) {\r\n      res.errors.push(\"Please insert a valid last name\");\r\n    }\r\n\r\n    if (!usernameRegex.test(username)) {\r\n      res.errors.push(\"Username must contain at least 3 characters\");\r\n    }\r\n  }\r\n\r\n  if (res.errors.length > 0) {\r\n    res.isValid = false;\r\n  }\r\n\r\n  return res;\r\n};\r\n\r\nexport { validateUser, authFormTypes };","\r\nimport React, { useContext, useState, SyntheticEvent } from \"react\";\r\nimport { MessageContext } from \"../../contexts/MessageContext\";\r\nimport { loginService, handleAuthForm } from \"../../services/auth\";\r\nimport { messageSeverities } from \"../Message/Message\";\r\nimport { validateUser, authFormTypes } from \"./Validator/Validator\";\r\nimport { form } from \"../../styles/Styles\";\r\nimport { Avatar, Button, TextField, Typography, Container } from \"@material-ui/core\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\n\r\ninterface Props {\r\n  history: History;\r\n}\r\n\r\nconst Login: React.FC<Props> = ({ history }) => {\r\n  const { setMessage, setMessageSeverity, clearMessage } = useContext(MessageContext);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const classes = form();\r\n\r\n  const handleSubmit = async (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    clearMessage();\r\n\r\n    const formInputs = { email, password };\r\n    const res = validateUser(formInputs, authFormTypes.login);\r\n\r\n    if (res.isValid) {\r\n      const res = await loginService(formInputs);\r\n      const user = res.data?.user;\r\n      handleAuthForm(res, user, history, setErrorMessage);\r\n    } else {\r\n      setErrorMessage(res.errors[0]);\r\n    }\r\n  };\r\n\r\n  const setErrorMessage = (message: string) => {\r\n    setMessage(message);\r\n    setMessageSeverity(messageSeverities.ERROR);\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">Login</Typography>\r\n        <form className={classes.form} onSubmit={handleSubmit}>\r\n          <TextField required variant=\"outlined\" margin=\"normal\" fullWidth label=\"email\" autoComplete=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n          <TextField required variant=\"outlined\" margin=\"normal\" fullWidth label=\"password\" autoComplete=\"password\" value={password} type=\"password\" onChange={(e) => setPassword(e.target.value)} />\r\n          <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>Login</Button>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;","import React, { useContext, useState, SyntheticEvent } from \"react\";\r\nimport { MessageContext } from \"../../contexts/MessageContext\";\r\nimport { registerService, handleAuthForm } from \"../../services/auth\";\r\nimport { messageSeverities } from \"../Message/Message\";\r\nimport { validateUser, authFormTypes } from \"./Validator/Validator\";\r\nimport { form } from \"../../styles/Styles\";\r\nimport { Avatar, Button, TextField, Typography, Container, FormControlLabel, Checkbox } from \"@material-ui/core\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\n\r\ninterface Props {\r\n  history: History;\r\n}\r\n\r\nconst Register: React.FC<Props> = ({ history }) => {\r\n  const { setMessage, setMessageSeverity, clearMessage } = useContext(MessageContext);\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const classes = form();\r\n\r\n  const handleSubmit = async (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    clearMessage();\r\n\r\n    const role = isAdmin ? 0 : 1;\r\n    const formInputs = { firstName, lastName, username, email, password, role };\r\n    const res = validateUser(formInputs, authFormTypes.register);\r\n\r\n    if (res.isValid) {\r\n      const res = await registerService(formInputs);\r\n      const user = { username, role };\r\n      handleAuthForm(res, user, history, setErrorMessage);\r\n    } else {\r\n      setErrorMessage(res.errors[0]);\r\n    }\r\n  };\r\n\r\n  const setErrorMessage = (message: string) => {\r\n    setMessage(message);\r\n    setMessageSeverity(messageSeverities.ERROR);\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">Register</Typography>\r\n        <form className={classes.form} onSubmit={handleSubmit}>\r\n          <TextField required variant=\"outlined\" margin=\"normal\" fullWidth label=\"first name\" autoComplete=\"first name\" value={firstName} onChange={(e) => setFirstName(e.target.value)} />\r\n          <TextField required variant=\"outlined\" margin=\"normal\" fullWidth label=\"last name\" autoComplete=\"last name\" value={lastName} onChange={(e) => setLastName(e.target.value)} />\r\n          <TextField required variant=\"outlined\" margin=\"normal\" fullWidth label=\"username\" autoComplete=\"username\" value={username} onChange={(e) => setUsername(e.target.value)} />\r\n          <TextField required variant=\"outlined\" margin=\"normal\" fullWidth label=\"email\" autoComplete=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n          <TextField required variant=\"outlined\" margin=\"normal\" fullWidth label=\"password\" autoComplete=\"password\" value={password} type=\"password\" onChange={(e) => setPassword(e.target.value)} />\r\n          <FormControlLabel\r\n            control={<Checkbox color=\"primary\" checked={isAdmin} onChange={() => setIsAdmin(!isAdmin)} />}\r\n            label=\"admin\"\r\n          />\r\n          <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>Register</Button>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Register;","import { restOptions, setRestOptions, handleResponse } from \"./helper\";\r\nimport { Task } from \"../interfaces/interfaces\";\r\nimport { messageSeverities } from \"../components/Message/Message\";\r\n\r\nconst { SUCCESS, ERROR } = messageSeverities;\r\nconst prefix = `api/tasks`;\r\n\r\nconst getTasksService = async () => {\r\n  const options = setRestOptions(restOptions.get);\r\n  const res = await fetch(`${prefix}`, options);\r\n  return handleResponse(res);\r\n};\r\n\r\nconst createTaskService = async (body: Task) => {\r\n  const options = setRestOptions(restOptions.post, body);\r\n  const res = await fetch(prefix, options);\r\n  return handleResponse(res);\r\n};\r\n\r\nconst editTaskService = async (body: Task) => {\r\n  const options = setRestOptions(restOptions.put, body);\r\n  const res = await fetch(`${prefix}/${body._id}`, options);\r\n  return handleResponse(res);\r\n};\r\n\r\nconst deleteTaskService = async (body: Task) => {\r\n  const options = setRestOptions(restOptions.delete, body);\r\n  const res = await fetch(`${prefix}/${body._id}`, options);\r\n  return handleResponse(res);\r\n};\r\n\r\nconst taskOperationHandler = (res: any, setMessage: (message: string, messageSeverities: string) => void) => {\r\n  const { message } = res.data;\r\n  const IsOperationSucceeded = res.success;\r\n  IsOperationSucceeded ? setMessage(message, SUCCESS) : setMessage(message, ERROR);\r\n  return IsOperationSucceeded;\r\n};\r\n\r\nexport { getTasksService, createTaskService, editTaskService, deleteTaskService, taskOperationHandler };","import React, { useState, useEffect, SyntheticEvent } from \"react\";\r\nimport { createTaskService, editTaskService, taskOperationHandler } from \"../../services/tasks\";\r\nimport { Task } from \"../../interfaces/interfaces\";\r\nimport { form } from \"../../styles/Styles\";\r\nimport { formTypes } from \"../../services/helper\";\r\nimport { messageSeverities, messages } from \"../Message/Message\";\r\nimport { TextField, Button, Dialog, DialogContent, Container, Avatar, Typography, IconButton } from \"@material-ui/core\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\r\n\r\ninterface Props {\r\n  getTasks: () => void;\r\n  formType: string;\r\n  taskToEdit?: Task;\r\n  setMessage: (message: string, messageSeverity: string) => void;\r\n}\r\n\r\nconst TaskForm: React.FC<Props> = ({ getTasks, formType, taskToEdit, setMessage }) => {\r\n  const userId = JSON.parse(localStorage.loggedInUser)._id;\r\n  const isEditType = (formType === formTypes.edit) && taskToEdit;\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [isButtonDisabled, setButtonDisabled] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  const classes = form();\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setButtonDisabled(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isEditType && taskToEdit) {\r\n      const { title, description } = taskToEdit;\r\n      setFormValues(title, description);\r\n    }\r\n  }, [isEditType, taskToEdit, open]);\r\n\r\n  const resetFormValues = () => {\r\n    setFormValues(\"\", \"\");\r\n  };\r\n\r\n  const handleSubmit = async (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    setButtonDisabled(true);\r\n    setMessage(\"\", \"\");\r\n\r\n    const IsOperationSucceeded = isEditType ? await editOperation() : await addOperation();\r\n    handleClose();\r\n\r\n    if (IsOperationSucceeded) {\r\n      resetFormValues();\r\n      getTasks();\r\n    }\r\n  };\r\n\r\n  const addOperation = async () => {\r\n    let IsOperationSucceeded = false;\r\n    const newTask = { userId, title, description, createdAt: Date.now() };\r\n    const res = await createTaskService(newTask);\r\n    IsOperationSucceeded = taskOperationHandler(res, setMessage);\r\n    return IsOperationSucceeded;\r\n  };\r\n\r\n  const editOperation = async () => {\r\n    let IsOperationSucceeded = false;\r\n\r\n    if (taskToEdit) {\r\n      const updatedTask = { _id: taskToEdit._id, userId, title, description, };\r\n      const isTasksEqual = compareTasks(taskToEdit, updatedTask);\r\n\r\n      if (!isTasksEqual) {\r\n        const res = await editTaskService(updatedTask);\r\n        IsOperationSucceeded = taskOperationHandler(res, setMessage);\r\n      } else {\r\n        setMessage(`Task ${messages.notChanged}`, messageSeverities.WARNING);\r\n      }\r\n    }\r\n\r\n    return IsOperationSucceeded;\r\n  };\r\n\r\n  const compareTasks = (taskToEdit: Task, updatedTask: Task) => {\r\n    let isTasksEqual = false;\r\n    const { __v, _id, createdAt, userId, ...taskToEditValues } = taskToEdit;\r\n    const { _id: taskId, userId: uId, ...updatedTaskValues } = updatedTask;\r\n\r\n    Object.keys(taskToEditValues).sort();\r\n    Object.keys(updatedTaskValues).sort();\r\n\r\n    if (JSON.stringify(taskToEditValues) === JSON.stringify(updatedTaskValues)) {\r\n      isTasksEqual = true;\r\n    }\r\n\r\n    return isTasksEqual;\r\n  };\r\n\r\n  const setFormValues = (title: string, description: string) => {\r\n    setTitle(title);\r\n    setDescription(description);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isEditType ?\r\n        <IconButton onClick={handleClickOpen}>\r\n          <EditIcon />\r\n        </IconButton>\r\n        :\r\n        <Button type=\"button\" variant=\"contained\" color=\"primary\" className={classes.addTaskButton} onClick={handleClickOpen}>Add Task</Button>\r\n      }\r\n\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogContent>\r\n          <Container>\r\n            <div className={classes.paper}>\r\n              <Avatar className={classes.avatar}>\r\n                <AssignmentIcon />\r\n              </Avatar>\r\n              <Typography component=\"h1\" variant=\"h5\">{isEditType ? \"Edit\" : \"Add\"} Task</Typography>\r\n              <form className={classes.form} onSubmit={handleSubmit}>\r\n                <TextField required variant=\"outlined\" margin=\"normal\" fullWidth label=\"title\" autoComplete=\"title\" value={title} onChange={(e) => setTitle(e.target.value)} />\r\n                <TextField required variant=\"outlined\" margin=\"normal\" fullWidth label=\"description\" autoComplete=\"description\" value={description} onChange={(e) => setDescription(e.target.value)} />\r\n                <div className={classes.dialogButtonsWrapper}>\r\n                <Button disabled={isButtonDisabled} type=\"submit\" color=\"primary\">Save</Button>\r\n                <Button onClick={handleClose} type=\"button\" color=\"primary\">Cancel</Button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Container>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskForm;","import React, { useState } from \"react\";\r\nimport { Task } from \"../../interfaces/interfaces\";\r\nimport { taskOperationHandler } from \"../../services/tasks\";\r\nimport { deleteTaskService } from \"../../services/tasks\";\r\nimport { dialog } from \"../../styles/Styles\";\r\nimport { IconButton, Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from \"@material-ui/core\";\r\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\r\n\r\ninterface Props {\r\n  task: Task;\r\n  getTasks: () => void;\r\n  setMessage: (message: string, messageSeverity: string) => void;\r\n}\r\n\r\nconst DeleteTask: React.FC<Props> = ({ task, getTasks, setMessage }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const deleteTask = async () => {\r\n    setOpen(false);\r\n\r\n    const res = await deleteTaskService(task);\r\n    taskOperationHandler(res, setMessage);\r\n\r\n    if (res.success) {\r\n      getTasks();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <IconButton onClick={handleClickOpen}>\r\n        <DeleteOutlineIcon />\r\n      </IconButton>\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle style={dialog.title}>Delete Task...</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText style={dialog.contentText}>\r\n            Are you sure you want to delete {task.title} ?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions style={dialog.dialogActions}>\r\n          <Button onClick={deleteTask} color=\"primary\">Yes</Button>\r\n          <Button onClick={handleClose} color=\"primary\">Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DeleteTask;","import React from \"react\";\r\nimport { Task } from \"../../interfaces/interfaces\";\r\nimport { formTypes } from \"../../services/helper\";\r\nimport { makeStyles, Grid, Card, CardActions, CardContent, Typography } from \"@material-ui/core\";\r\nimport TaskForm from \"./TaskForm\";\r\nimport DeleteTask from \"./DeleteTask\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  card: {\r\n    height: \"100%\"\r\n  },\r\n  cardContent: {\r\n    textAlign: \"center\",\r\n    \"& > *\": {\r\n      overflow: \"hidden\",\r\n      textOverflow: \"ellipsis\"\r\n    }\r\n  },\r\n  userDetails: {\r\n    marginTop: \"10px\"\r\n  },\r\n  cardActions: {\r\n    justifyContent: \"center\"\r\n  }\r\n}));\r\n\r\nconst displayDate = (date: string) => {\r\n  const l10nHE = new Intl.DateTimeFormat(\"he-IL\");\r\n  return l10nHE.format(new Date(date)).split(\".\").join(\"/\");\r\n};\r\n\r\ninterface Props {\r\n  tasks: Task[] | null;\r\n  getTasks: () => void;\r\n  setMessage: (message: string, messageSeverity: string) => void;\r\n}\r\n\r\nconst Tasks: React.FC<Props> = ({ tasks, getTasks, setMessage }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      {tasks?.map((task: Task) => (\r\n        <Grid item xs={12} sm={5} key={task._id}>\r\n          <Card elevation={3} className={classes.card}>\r\n            <CardContent className={classes.cardContent}>\r\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">{task.title}</Typography>\r\n              <Typography variant=\"subtitle1\">{task.description}</Typography>\r\n              <div className={classes.cardContent + \" \" + classes.userDetails}>\r\n                <Typography variant=\"subtitle1\" color=\"textSecondary\">{task.userId?.email}</Typography>\r\n                <Typography variant=\"subtitle1\" color=\"textSecondary\">Created at: {displayDate(task.createdAt)}</Typography>\r\n              </div>\r\n            </CardContent>\r\n            <CardActions className={classes.cardActions}>\r\n              <TaskForm formType={formTypes.edit} taskToEdit={task} getTasks={getTasks} setMessage={setMessage} />\r\n              <DeleteTask task={task} getTasks={getTasks} setMessage={setMessage} />\r\n            </CardActions>\r\n          </Card>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Tasks;","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { MessageContext } from \"../../contexts/MessageContext\";\r\nimport { formTypes } from \"../../services/helper\";\r\nimport { getTasksService } from \"../../services/tasks\";\r\nimport { header } from \"../../styles/Styles\";\r\nimport { Container, Typography } from \"@material-ui/core\";\r\nimport TaskForm from \"./TaskForm\";\r\nimport Tasks from \"./Tasks\";\r\n\r\nconst TasksContainer: React.FC = () => {\r\n  const { setMessage, setMessageSeverity } = useContext(MessageContext);\r\n  const [tasks, setTasks] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getTasks();\r\n  }, []);\r\n\r\n  const getTasks = async () => {\r\n    const res = await getTasksService();\r\n    const { success, data } = res;\r\n\r\n    if (success) {\r\n      setTasks(data);\r\n    }\r\n  };\r\n\r\n  const setTaskOperationMessage = (message: string, messageSeverity: string) => {\r\n    setMessage(message);\r\n    setMessageSeverity(messageSeverity);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Typography component=\"h1\" variant=\"h5\" style={header}>Tasks</Typography>\r\n      <TaskForm getTasks={getTasks} formType={formTypes.add} setMessage={setTaskOperationMessage} />\r\n      <Tasks tasks={tasks} getTasks={getTasks} setMessage={setTaskOperationMessage} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TasksContainer;","import React from \"react\";\r\nimport { header } from \"../../styles/Styles\";\r\nimport { makeStyles, Container, Typography, Button } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  link: {\r\n    textDecoration: \"none\"\r\n  }\r\n}));\r\n\r\nconst Page404: React.FC = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container>\r\n      <Typography component=\"h1\" variant=\"h5\" style={header}>404 Page not found</Typography>\r\n      <Link to=\"/tasks\" className={classes.link}>\r\n        <Button variant=\"contained\" color=\"primary\">Back</Button>\r\n      </Link>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Page404;","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router\";\r\n\r\ninterface Props {\r\n  exact: boolean;\r\n  path: string;\r\n  Component: React.ComponentType<any>;\r\n}\r\n\r\nconst AuthenticatedRoute: React.FC<Props> = ({ path, Component }) => {\r\n  return (\r\n    <Route path={path} render={props => localStorage.loggedInUser ? <Component {...props} /> : <Redirect to=\"/login\" />} />\r\n  );\r\n};\r\n\r\nexport default AuthenticatedRoute;","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router\";\r\n\r\ninterface Props {\r\n  exact: boolean;\r\n  path: string;\r\n  Component: React.ComponentType<any>;\r\n}\r\n\r\nconst UnauthenticatedRoute: React.FC<Props> = ({ path, Component }) => {\r\n  return (\r\n    <Route path={path} render={props => !localStorage.loggedInUser ? <Component {...props} /> : <Redirect to=\"/tasks\" />} />\r\n  );\r\n};\r\n\r\nexport default UnauthenticatedRoute;","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router\";\r\n\r\ninterface Props {\r\n  exact: boolean;\r\n  path: string;\r\n  Component: React.ComponentType<any>;\r\n}\r\n\r\nconst DefaultRoute: React.FC<Props> = () => {\r\n  return (\r\n    <Route render={() => localStorage.loggedInUser ? <Redirect to=\"/tasks\" /> : <Redirect to=\"/login\" />} />\r\n  );\r\n};\r\n\r\nexport default DefaultRoute;","import React from \"react\";\r\nimport { MessageContextProvider } from \"./contexts/MessageContext\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport Login from \"./components/Forms/Login\";\r\nimport Register from \"./components/Forms/Register\";\r\nimport TasksContainer from \"./components/Tasks/TasksContainer\";\r\nimport Page404 from \"./components/Routes/Page404\";\r\nimport AuthenticatedRoute from \"./components/Routes/AuthenticatedRoute\";\r\nimport UnauthenticatedRoute from \"./components/Routes/UnauthenticatedRoute\";\r\nimport DefaultRoute from \"./components/Routes/DefaultRoute\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport { Message } from \"./components/Message/Message\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Navbar />\r\n      <MessageContextProvider>\r\n        <Switch>\r\n          <UnauthenticatedRoute exact path=\"/login\" Component={Login} />\r\n          <UnauthenticatedRoute exact path=\"/register\" Component={Register} />\r\n          <AuthenticatedRoute exact path=\"/tasks\" Component={TasksContainer} />\r\n          <DefaultRoute exact path=\"/\" Component={TasksContainer} />\r\n          <Route component={Page404} />\r\n        </Switch>\r\n        <Message />\r\n      </MessageContextProvider>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === \"[::1]\" ||\r\n  // 127.0.0.0/8 are considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won\"t work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let\"s check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n            \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It\"s the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can\"t reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(< App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();","module.exports = __webpack_public_path__ + \"static/media/appIcon.0f30bf67.png\";"],"sourceRoot":""}