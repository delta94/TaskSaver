{"version":3,"sources":["images/appIcon.png","contexts/AppContext.tsx","components/Theme/Theme.tsx","components/Message/Message.tsx","styles/Styles.tsx","components/Logout/Logout.tsx","components/Navbar/Navbar.tsx","services/helper.tsx","services/auth.tsx","components/Forms/Validator/Validator.tsx","components/Forms/Login.tsx","services/organizations.tsx","components/Forms/Register.tsx","components/Tasks/TaskForm.tsx","contexts/TasksContext.tsx","components/Tasks/DeleteTask.tsx","components/Tasks/Tasks.tsx","components/Tasks/TasksContainer.tsx","AppRouter/Routes/Page404.tsx","AppRouter/Routes/AuthenticatedRoute.tsx","AppRouter/Routes/UnauthenticatedRoute.tsx","AppRouter/Routes/DefaultRoute.tsx","components/Dashboard/Dashboard.tsx","AppRouter/Routes/AdminRoute.tsx","AppRouter/AppRouter.tsx","App.tsx","serviceWorker.tsx","index.tsx"],"names":["module","exports","socket","io","AppContext","createContext","undefined","AppContextProvider","children","theme","setTheme","useState","message","setMessage","messageSeverity","setMessageSeverity","loggedInUser","setLoggedInUser","isAdmin","setIsAdmin","reConnectSocket","setReConnectSocket","useEffect","Provider","value","clearMessage","getUserFromLS","user","JSON","parse","localStorage","role","disconnect","clear","useStyles","makeStyles","themeWrapper","marginRight","lightTheme","createMuiTheme","palette","type","primary","main","contrastText","secondary","typography","button","textTransform","darkTheme","Theme","useContext","classes","handleThemeChange","event","target","className","Radio","checked","onChange","messages","messageSeverities","Message","open","setOpen","closeMessage","Snackbar","autoHideDuration","onClose","elevation","variant","severity","header","marginTop","marginBottom","dialog","title","textAlign","dialogActions","justifyContent","contentText","minWidth","overflow","textOverflow","description","fontSize","form","paper","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","width","select","loginButton","registerButton","dialogButtonsWrapper","taskButtons","Logout","history","useHistory","IconButton","onClick","color","Dialog","DialogTitle","style","DialogContent","DialogContentText","DialogActions","Button","push","autoFocus","menuButton","flexGrow","img","height","cursor","username","maxWidth","Navbar","buttonText","setButtonText","location","useLocation","pathname","_id","hideAuthRoutesButton","setAuthRoutesButtonValue","AppBar","position","Toolbar","src","appIcon","alt","window","reload","Typography","restOptions","formTypes","setRestOptions","methodType","body","method","headers","stringify","handleResponse","res","a","status","errorCodes","json","data","includes","success","loginService","options","fetch","registerService","handleAuthForm","formInputs","setErrorMessage","resUserData","emailRegex","RegExp","nameRegex","usernameRegex","authFormTypes","validateUser","formType","firstName","lastName","email","password","organizationId","isValid","errors","test","length","Login","formValues","setFormValues","handleSubmit","e","preventDefault","Avatar","component","onSubmit","TextField","required","fullWidth","label","autoComplete","getOrganizationsService","Register","organizations","getOrganizations","FormControl","InputLabel","Select","map","organization","index","MenuItem","key","name","FormControlLabel","control","Checkbox","TaskForm","taskToEdit","setTitle","setDescription","isButtonDisabled","setButtonDisabled","userId","isEditType","handleClickOpen","handleClose","editOperation","addOperation","newTask","createdAt","Date","now","emit","updatedTask","compareTasks","isTasksEqual","taskToEditValues","__v","updatedTaskValues","Object","keys","sort","aria-labelledby","disabled","TasksContext","TasksContextProvider","tasks","setTasks","setUpdatedTask","deletedTaskId","setDeletedTaskId","chartData","setChartData","setOperationMessage","room","on","prevTasks","removeAllListeners","findIndex","task","updateTasksArray","splice","removeTaskFromArray","openTasks","filter","closedTasks","setOpenClosedTasks","DeleteTask","deleteTask","taskId","card","cardContent","userDetails","cardActions","Tasks","searchValue","setSearchValue","Grid","container","justify","item","xs","sm","toLowerCase","toLocaleLowerCase","date","div","layout","transition","duration","initial","opacity","animate","Card","CardContent","gutterBottom","Intl","DateTimeFormat","format","split","join","CardActions","Switch","inputProps","TasksContainer","isMobile","useMediaQuery","padding","marginLeft","link","textDecoration","Page404","to","AuthenticatedRoute","path","Component","render","UnauthenticatedRoute","props","DefaultRoute","Dashboard","chartState","labels","datasets","barThickness","borderWidth","text","legend","scales","xAxes","gridLines","yAxes","ticks","beginAtZero","AdminRoute","withRouter","Container","exact","App","ThemeProvider","CssBaseline","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.144adb6f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/appIcon.0f30bf67.png\";","import React, { createContext, useState, Dispatch, SetStateAction, Context, useEffect } from \"react\";\r\nimport { User } from \"../interfaces/interfaces\";\r\nimport io from \"socket.io-client\";\r\nlet socket = io();\r\n\r\ninterface Props {\r\n  theme: string;\r\n  setTheme: Dispatch<SetStateAction<string>>;\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst AppContext: Context<any> = createContext(undefined);\r\n\r\nconst AppContextProvider: React.FC<Props> = ({ children, theme, setTheme }) => {\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messageSeverity, setMessageSeverity] = useState(\"\");\r\n  const [loggedInUser, setLoggedInUser] = useState<User | {}>({});\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const [reConnectSocket, setReConnectSocket] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (reConnectSocket) {\r\n      socket = io();\r\n      setReConnectSocket(false);\r\n    }\r\n\r\n  }, [reConnectSocket]);\r\n\r\n  const getUserFromLS = () => {\r\n    const user = JSON.parse(localStorage.loggedInUser);\r\n    setLoggedInUser(user);\r\n    setIsAdmin(user.role === 0);\r\n  };\r\n\r\n  const disconnect = () => {\r\n    localStorage.clear();\r\n    socket.disconnect();\r\n    setLoggedInUser({});\r\n  };\r\n\r\n  const clearMessage = () => {\r\n    setMessage(\"\");\r\n    setMessageSeverity(\"\");\r\n  };\r\n\r\n  return (\r\n    <AppContext.Provider value={{\r\n      message, messageSeverity, setMessage, setMessageSeverity, clearMessage, theme, setTheme, socket,\r\n      loggedInUser, isAdmin, getUserFromLS, setReConnectSocket, disconnect\r\n    }}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport { AppContext, AppContextProvider };","import React, { useContext } from \"react\";\r\nimport { AppContext } from \"../../contexts/AppContext\";\r\nimport { Radio, makeStyles, createMuiTheme } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  themeWrapper: {\r\n    marginRight: \"10px\"\r\n  }\r\n}));\r\n\r\nconst lightTheme = createMuiTheme({\r\n  palette: {\r\n    type: \"light\",\r\n    primary: {\r\n      main: \"#4f8a8b\",\r\n      contrastText: \"#fff\",\r\n    },\r\n    secondary: {\r\n      main: \"#fff\",\r\n      contrastText: \"#fff\"\r\n    }\r\n  },\r\n  typography: {\r\n    button: {\r\n      textTransform: \"capitalize\"\r\n    }\r\n  }\r\n});\r\n\r\nconst darkTheme = createMuiTheme({\r\n  palette: {\r\n    type: \"dark\",\r\n    primary: {\r\n      main: \"#c26565\"\r\n    },\r\n    secondary: {\r\n      main: \"#fff\"\r\n    }\r\n  },\r\n  typography: {\r\n    button: {\r\n      textTransform: \"capitalize\"\r\n    }\r\n  }\r\n});\r\n\r\nconst Theme: React.FC = () => {\r\n  const { theme, setTheme } = useContext(AppContext);\r\n  const classes = useStyles();\r\n\r\n  const handleThemeChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setTheme(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.themeWrapper}>\r\n      <Radio value=\"light\" checked={theme === \"light\"} onChange={handleThemeChange} />\r\n      <Radio value=\"dark\" checked={theme === \"dark\"} onChange={handleThemeChange} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { Theme, lightTheme, darkTheme };","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { AppContext } from \"../../contexts/AppContext\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\nconst messages = {\r\n  fillCorrectly: \"Please fill out form correctly\",\r\n  notChanged: \"didn't changed\",\r\n  created: \"created successfully\",\r\n  updated: \"updated successfully\",\r\n  deleted: \"deleted successfully\"\r\n};\r\n\r\nconst messageSeverities = {\r\n  SUCCESS: \"success\",\r\n  ERROR: \"error\",\r\n  WARNING: \"warning\"\r\n};\r\n\r\nconst Message: React.FC = () => {\r\n  const { message, messageSeverity, clearMessage } = useContext(AppContext);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const closeMessage = () => {\r\n    clearMessage();\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    message ? setOpen(true) : closeMessage();\r\n\r\n    // eslint-disable-next-line\r\n  }, [message]);\r\n\r\n  return (\r\n    <>\r\n      {message && messageSeverity && <Snackbar open={open} autoHideDuration={3000} onClose={() => closeMessage()}>\r\n        <MuiAlert elevation={6} variant=\"filled\" severity={messageSeverity} onClose={() => closeMessage()}>{message}</MuiAlert>\r\n      </Snackbar>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport { Message, messages, messageSeverities };","import { Theme, makeStyles } from \"@material-ui/core\";\r\n\r\nconst header = {\r\n  marginTop: \"20px\",\r\n  marginBottom: \"10px\"\r\n};\r\n\r\nconst dialog = {\r\n  title: {\r\n    textAlign: \"center\" as \"center\"\r\n  },\r\n  dialogActions: {\r\n    justifyContent: \"center\"\r\n  },\r\n  contentText: {\r\n    minWidth: \"200px\",\r\n    overflow: \"hidden\",\r\n    textOverflow: \"ellipsis\"\r\n  },\r\n  description: {\r\n    fontSize: \"1rem\"\r\n  }\r\n};\r\n\r\nconst form = makeStyles((theme: Theme) => {\r\n  return {\r\n    paper: {\r\n      marginBottom: theme.spacing(2),\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\"\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.primary.main\r\n    },\r\n    form: {\r\n      width: \"100%\",\r\n      marginTop: theme.spacing(1)\r\n    },\r\n    select: {\r\n      width: \"100%\",\r\n      margin: theme.spacing(1, 0, 1)\r\n    },\r\n    loginButton: {\r\n      margin: theme.spacing(3, 0, 2)\r\n    },\r\n    registerButton: {\r\n      margin: theme.spacing(1, 0, 0)\r\n    },\r\n    dialogButtonsWrapper: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      marginTop: \"15px\"\r\n    },\r\n    taskButtons: {\r\n      marginBottom: \"10px\"\r\n    }\r\n  };\r\n});\r\n\r\nexport { header, dialog, form };","import React, { useState, useContext } from \"react\";\r\nimport { IconButton, Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { dialog } from \"../../styles/Styles\";\r\nimport { AppContext } from \"../../contexts/AppContext\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\n\r\nconst Logout: React.FC = () => {\r\n  const { disconnect } = useContext(AppContext);\r\n  const [open, setOpen] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const logout = () => {\r\n    disconnect();\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <IconButton onClick={() => setOpen(true)} color=\"secondary\">\r\n        <ExitToAppIcon />\r\n      </IconButton>\r\n      <Dialog open={open} onClose={() => setOpen(false)}>\r\n        <DialogTitle style={dialog.title}>Log out</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Are you sure you want to log out ?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions style={dialog.dialogActions}>\r\n          <Button onClick={logout} autoFocus>Yes</Button>\r\n          <Button onClick={() => setOpen(false)}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Logout;","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { makeStyles, Button, AppBar, Toolbar, Typography } from \"@material-ui/core\";\r\nimport { Theme } from \"../Theme/Theme\";\r\nimport { AppContext } from \"../../contexts/AppContext\";\r\nimport Logout from \"../Logout/Logout\";\r\nimport appIcon from \"../../images/appIcon.png\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  title: {\r\n    flexGrow: 1\r\n  },\r\n  img: {\r\n    height: \"30px\",\r\n    marginRight: \"7px\",\r\n    cursor: \"pointer\"\r\n  },\r\n  username: {\r\n    maxWidth: \"54px\",\r\n    overflow: \"hidden\",\r\n    textOverflow: \"ellipsis\"\r\n  }\r\n}));\r\n\r\nconst Navbar: React.FC = () => {\r\n  const { loggedInUser } = useContext(AppContext);\r\n  const [buttonText, setButtonText] = useState(\"\");\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    const setAuthRoutesButtonValue = () => {\r\n      const { pathname } = location;\r\n\r\n      if (loggedInUser._id) {\r\n        hideAuthRoutesButton();\r\n      } else {\r\n        pathname === \"/login\" || pathname === \"/\" ? setButtonText(\"register\") : setButtonText(\"login\");\r\n      }\r\n    };\r\n\r\n    setAuthRoutesButtonValue();\r\n\r\n  }, [loggedInUser, location]);\r\n\r\n  const hideAuthRoutesButton = () => {\r\n    setButtonText(\"\");\r\n  };\r\n\r\n  const refreshPage = () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  const navigateToPage = () => {\r\n    history.push(buttonText);\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"static\" color=\"primary\">\r\n      <Toolbar>\r\n        <img src={appIcon} alt=\"navbar-img\" className={classes.img} onClick={refreshPage} />\r\n        <Typography variant=\"h6\" className={classes.title}>TaskSaver</Typography>\r\n        <Theme />\r\n        {loggedInUser._id ?\r\n          <>\r\n            <Typography variant=\"subtitle1\" className={classes.username}>{loggedInUser.username}</Typography>\r\n            <Logout />\r\n          </>\r\n          :\r\n          <>\r\n            {buttonText && <Button onClick={navigateToPage} color=\"secondary\">{buttonText}</Button>}\r\n          </>\r\n        }\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Navbar;","const restOptions = {\r\n  get: \"GET\",\r\n  post: \"POST\",\r\n  put: \"PUT\",\r\n  delete: \"DELETE\"\r\n};\r\n\r\nconst formTypes = {\r\n  add: \"Add\",\r\n  edit: \"Edit\"\r\n};\r\n\r\nconst setRestOptions = (methodType: string, body?: any) => {\r\n  return {\r\n    method: methodType,\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(body)\r\n  };\r\n};\r\n\r\nconst handleResponse = async (res: Response) => {\r\n  const { status } = res;\r\n  const errorCodes = [400, 401, 404, 500];\r\n  const data = await res.json();\r\n\r\n  if (errorCodes.includes(status)) {\r\n    return { data, success: false };\r\n  }\r\n\r\n  return { data, success: true };\r\n};\r\n\r\nexport { restOptions, formTypes, setRestOptions, handleResponse };","import { restOptions, setRestOptions, handleResponse } from \"./helper\";\r\nimport { User } from \"../interfaces/interfaces\";\r\n\r\nconst prefix = `api/auth`;\r\n\r\nconst loginService = async (body: User) => {\r\n  const options = setRestOptions(restOptions.post, body);\r\n  const res = await fetch(`${prefix}/login`, options);\r\n  return handleResponse(res);\r\n};\r\n\r\nconst registerService = async (body: User) => {\r\n  const options = setRestOptions(restOptions.post, body);\r\n  const res = await fetch(`${prefix}/register`, options);\r\n  return handleResponse(res);\r\n};\r\n\r\nconst handleAuthForm = (res: any, formInputs: any, history: any, setErrorMessage: (message: string) => void) => {\r\n  const { user: resUserData, message } = res.data;\r\n\r\n  if (resUserData) {\r\n    const user = { ...resUserData, ...formInputs };\r\n    localStorage.loggedInUser = JSON.stringify(user);\r\n    history.push(\"/tasks\");\r\n  } else {\r\n    setErrorMessage(message);\r\n  }\r\n};\r\n\r\nexport { loginService, registerService, handleAuthForm };","import { User } from \"../../../interfaces/interfaces\";\r\n\r\nconst emailRegex = new RegExp(/[a-z0-9!#$%&\"*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&\"*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/);\r\nconst nameRegex = new RegExp(/[a-zA-Z][a-zA-Z ]+/);\r\nconst usernameRegex = new RegExp(/^[a-z0-9_-]{3,16}$/);\r\n\r\nconst authFormTypes = {\r\n  login: \"Login\",\r\n  register: \"Register\"\r\n};\r\n\r\nconst validateUser = (user: User, formType: string) => {\r\n  const { firstName, lastName, username, email, password, role, organizationId } = user;\r\n  const res: { isValid: boolean, errors: string[]; } = { isValid: true, errors: [] };\r\n\r\n  if (!emailRegex.test(email)) {\r\n    res.errors.push(\"Please insert a valid email address\");\r\n  }\r\n\r\n  if (password.length < 3) {\r\n    res.errors.push(\"Password must contain at least 3 characters\");\r\n  }\r\n\r\n  if (formType === authFormTypes.register && firstName && lastName && username) {\r\n    if (!nameRegex.test(firstName)) {\r\n      res.errors.push(\"Please insert a valid first name\");\r\n    }\r\n\r\n    if (!nameRegex.test(lastName)) {\r\n      res.errors.push(\"Please insert a valid last name\");\r\n    }\r\n\r\n    if (!usernameRegex.test(username)) {\r\n      res.errors.push(\"Please insert a valid username\");\r\n    }\r\n\r\n    if (role !== 0 && role !== 1) {\r\n      res.errors.push(\"User role must be 0 or 1\");\r\n    }\r\n\r\n    if (!organizationId) {\r\n      res.errors.push(\"User must belong to an organization\");\r\n    }\r\n  }\r\n\r\n  if (res.errors.length > 0) {\r\n    res.isValid = false;\r\n  }\r\n\r\n  return res;\r\n};\r\n\r\nexport { validateUser, authFormTypes };","\r\nimport React, { useContext, useState, SyntheticEvent } from \"react\";\r\nimport { AppContext } from \"../../contexts/AppContext\";\r\nimport { loginService, handleAuthForm } from \"../../services/auth\";\r\nimport { messageSeverities } from \"../Message/Message\";\r\nimport { validateUser, authFormTypes } from \"./Validator/Validator\";\r\nimport { form } from \"../../styles/Styles\";\r\nimport { Avatar, Button, TextField, Typography } from \"@material-ui/core\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\n\r\ninterface Props {\r\n  history: History;\r\n}\r\n\r\nconst Login: React.FC<Props> = ({ history }) => {\r\n  const { setMessage, setMessageSeverity, clearMessage } = useContext(AppContext);\r\n  const [formValues, setFormValues] = useState({ email: \"\", password: \"\" });\r\n  const classes = form();\r\n\r\n  const handleSubmit = async (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    clearMessage();\r\n\r\n    const { email, password } = formValues;\r\n    const formInputs = { email, password };\r\n    const res = validateUser(formInputs, authFormTypes.login);\r\n\r\n    if (res.isValid) {\r\n      const res = await loginService(formInputs);\r\n      const user = res.data?.user;\r\n      handleAuthForm(res, user, history, setErrorMessage);\r\n    } else {\r\n      setErrorMessage(res.errors[0]);\r\n    }\r\n  };\r\n\r\n  const setErrorMessage = (message: string) => {\r\n    setMessage(message);\r\n    setMessageSeverity(messageSeverities.ERROR);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.paper} style={{ marginTop: \"50px\" }}>\r\n      <Avatar className={classes.avatar}>\r\n        <LockOutlinedIcon />\r\n      </Avatar>\r\n      <Typography component=\"h1\" variant=\"h5\">Login</Typography>\r\n      <form className={classes.form} onSubmit={handleSubmit}>\r\n        <TextField required variant=\"outlined\" margin=\"normal\" fullWidth label=\"email\" autoComplete=\"email\" value={formValues.email} onChange={(e) => setFormValues({ ...formValues, email: e.target.value })} />\r\n        <TextField required variant=\"outlined\" margin=\"normal\" fullWidth label=\"password\" autoComplete=\"password\" value={formValues.password} type=\"password\" onChange={(e) => setFormValues({ ...formValues, password: e.target.value })} />\r\n        <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.loginButton}>Login</Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;","import { restOptions, setRestOptions, handleResponse } from \"./helper\";\r\n\r\nconst prefix = `api/organizations`;\r\n\r\nconst getOrganizationsService = async () => {\r\n  const options = setRestOptions(restOptions.get);\r\n  const res = await fetch(prefix, options);\r\n  return handleResponse(res);\r\n};\r\n\r\nexport { getOrganizationsService };","import React, { useContext, useState, SyntheticEvent, useEffect } from \"react\";\r\nimport { AppContext } from \"../../contexts/AppContext\";\r\nimport { getOrganizationsService } from \"../../services/organizations\";\r\nimport { registerService, handleAuthForm } from \"../../services/auth\";\r\nimport { messageSeverities } from \"../Message/Message\";\r\nimport { validateUser, authFormTypes } from \"./Validator/Validator\";\r\nimport { form } from \"../../styles/Styles\";\r\nimport { Avatar, Button, TextField, Typography, FormControlLabel, Checkbox, FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\r\nimport { Organization } from \"../../interfaces/interfaces\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\n\r\ninterface Props {\r\n  history: History;\r\n}\r\n\r\nconst Register: React.FC<Props> = ({ history }) => {\r\n  const classes = form();\r\n  const { setMessage, setMessageSeverity, clearMessage } = useContext(AppContext);\r\n  const [formValues, setFormValues] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    organizations: [],\r\n    organizationId: \"\",\r\n    isAdmin: false\r\n  });\r\n\r\n  useEffect(() => {\r\n    const getOrganizations = async () => {\r\n      const res = await getOrganizationsService();\r\n\r\n      if (res.data?.organizations) {\r\n        setFormValues({ ...formValues, organizations: res.data.organizations });\r\n      }\r\n    };\r\n\r\n    getOrganizations();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const handleSubmit = async (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    clearMessage();\r\n\r\n    const { firstName, lastName, username, email, password, organizationId, isAdmin } = formValues;\r\n    const role = isAdmin ? 0 : 1;\r\n    const formInputs = { firstName, lastName, username, email, password, role, organizationId };\r\n    const res = validateUser(formInputs, authFormTypes.register);\r\n\r\n    if (res.isValid) {\r\n      const res = await registerService(formInputs);\r\n      const user = { username, role, organizationId };\r\n      handleAuthForm(res, user, history, setErrorMessage);\r\n    } else {\r\n      setErrorMessage(res.errors[0]);\r\n    }\r\n  };\r\n\r\n  const setErrorMessage = (message: string) => {\r\n    setMessage(message);\r\n    setMessageSeverity(messageSeverities.ERROR);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.paper} style={{ marginTop: \"50px\" }}>\r\n      <Avatar className={classes.avatar}>\r\n        <LockOutlinedIcon />\r\n      </Avatar>\r\n      <Typography component=\"h1\" variant=\"h5\">Register</Typography>\r\n      <form className={classes.form} onSubmit={handleSubmit}>\r\n        <TextField required variant=\"outlined\" margin=\"normal\" fullWidth label=\"first name\" autoComplete=\"first name\" value={formValues.firstName} onChange={(e) => setFormValues({ ...formValues, firstName: e.target.value })} />\r\n        <TextField required variant=\"outlined\" margin=\"normal\" fullWidth label=\"last name\" autoComplete=\"last name\" value={formValues.lastName} onChange={(e) => setFormValues({ ...formValues, lastName: e.target.value })} />\r\n        <TextField required variant=\"outlined\" margin=\"normal\" fullWidth label=\"username\" autoComplete=\"username\" value={formValues.username} onChange={(e) => setFormValues({ ...formValues, username: e.target.value })} />\r\n        <TextField required variant=\"outlined\" margin=\"normal\" fullWidth label=\"email\" autoComplete=\"email\" value={formValues.email} onChange={(e) => setFormValues({ ...formValues, email: e.target.value })} />\r\n        <TextField required variant=\"outlined\" margin=\"normal\" fullWidth label=\"password\" autoComplete=\"password\" value={formValues.password} type=\"password\" onChange={(e) => setFormValues({ ...formValues, password: e.target.value })} />\r\n        <FormControl className={classes.select}>\r\n          <InputLabel>Organization</InputLabel>\r\n          <Select value={formValues.organizationId} onChange={(e: any) => setFormValues({ ...formValues, organizationId: e.target.value })}>\r\n            {formValues.organizations.map((organization: Organization, index: number) => (\r\n              <MenuItem key={index} value={organization._id}>{organization.name}</MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        <FormControlLabel\r\n          control={<Checkbox color=\"primary\" checked={formValues.isAdmin} onChange={() => setFormValues({ ...formValues, isAdmin: !formValues.isAdmin })} />} label=\"admin\" />\r\n        <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.registerButton}>Register</Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;","import React, { useState, useEffect, SyntheticEvent, useContext } from \"react\";\r\nimport { AppContext } from \"../../contexts/AppContext\";\r\nimport { Task } from \"../../interfaces/interfaces\";\r\nimport { form } from \"../../styles/Styles\";\r\nimport { formTypes } from \"../../services/helper\";\r\nimport { TextField, Button, Dialog, DialogContent, Avatar, Typography, IconButton } from \"@material-ui/core\";\r\nimport { messages, messageSeverities } from \"../Message/Message\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\r\n\r\ninterface Props {\r\n  formType: string;\r\n  taskToEdit?: Task;\r\n}\r\n\r\nconst TaskForm: React.FC<Props> = ({ formType, taskToEdit }) => {\r\n  const { socket, setMessage, setMessageSeverity, clearMessage, loggedInUser } = useContext(AppContext);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [isButtonDisabled, setButtonDisabled] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  const classes = form();\r\n  const userId = loggedInUser._id;\r\n  const isEditType = (formType === formTypes.edit) && taskToEdit;\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setButtonDisabled(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isEditType && taskToEdit) {\r\n      const { title, description } = taskToEdit;\r\n      setFormValues(title, description);\r\n    }\r\n  }, [isEditType, taskToEdit, open]);\r\n\r\n  const resetFormValues = () => {\r\n    setFormValues(\"\", \"\");\r\n  };\r\n\r\n  const handleSubmit = async (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    setButtonDisabled(true);\r\n    clearMessage();\r\n\r\n    isEditType ? await editOperation() : await addOperation();\r\n    handleClose();\r\n    resetFormValues();\r\n  };\r\n\r\n  const addOperation = async () => {\r\n    const newTask = { userId, title, description, createdAt: Date.now() };\r\n    socket.emit(\"createTask\", newTask);\r\n  };\r\n\r\n  const editOperation = async () => {\r\n    if (taskToEdit) {\r\n      const updatedTask = { _id: taskToEdit._id, userId, title, description, status: taskToEdit.status };\r\n      const isTasksEqual = compareTasks(taskToEdit, updatedTask);\r\n\r\n      if (!isTasksEqual) {\r\n        socket.emit(\"updateTask\", { updatedTask, userId });\r\n      } else {\r\n        setMessage(messages.notChanged);\r\n        setMessageSeverity(messageSeverities.WARNING);\r\n      }\r\n    }\r\n  };\r\n\r\n  const compareTasks = (taskToEdit: Task, updatedTask: Task) => {\r\n    let isTasksEqual = false;\r\n    const { _id, userId, createdAt, __v, ...taskToEditValues } = taskToEdit;\r\n    const { _id: taskId, userId: uId, ...updatedTaskValues } = updatedTask;\r\n\r\n    Object.keys(taskToEditValues).sort();\r\n    Object.keys(updatedTaskValues).sort();\r\n\r\n    if (JSON.stringify(taskToEditValues) === JSON.stringify(updatedTaskValues)) {\r\n      isTasksEqual = true;\r\n    }\r\n\r\n    return isTasksEqual;\r\n  };\r\n\r\n  const setFormValues = (title: string, description: string) => {\r\n    setTitle(title);\r\n    setDescription(description);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isEditType ?\r\n        <IconButton onClick={handleClickOpen}>\r\n          <EditIcon />\r\n        </IconButton>\r\n        :\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.taskButtons} onClick={handleClickOpen}>Add Task</Button>\r\n      }\r\n\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogContent>\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <AssignmentIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">{isEditType ? \"Edit\" : \"Add\"} Task</Typography>\r\n            <form className={classes.form} onSubmit={handleSubmit}>\r\n              <TextField required variant=\"outlined\" margin=\"normal\" fullWidth label=\"title\" autoComplete=\"title\" value={title} onChange={(e) => setTitle(e.target.value)} />\r\n              <TextField required variant=\"outlined\" margin=\"normal\" fullWidth label=\"description\" autoComplete=\"description\" value={description} onChange={(e) => setDescription(e.target.value)} />\r\n              <div className={classes.dialogButtonsWrapper}>\r\n                <Button disabled={isButtonDisabled} type=\"submit\">Save</Button>\r\n                <Button onClick={handleClose} type=\"button\">Cancel</Button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskForm;","import React, { createContext, useState, useEffect, useContext, SetStateAction, Context } from \"react\";\r\nimport { Task } from \"../interfaces/interfaces\";\r\nimport { AppContext } from \"./AppContext\";\r\nimport { messageSeverities } from \"../components/Message/Message\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\ninterface Props {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst TasksContext: Context<any> = createContext(undefined);\r\n\r\nconst TasksContextProvider: React.FC<Props> = ({ children }) => {\r\n  const { socket, setMessage, setMessageSeverity, getUserFromLS, setReConnectSocket } = useContext(AppContext);\r\n  const [tasks, setTasks] = useState<Task[]>([]);\r\n  const [updatedTask, setUpdatedTask] = useState<SetStateAction<any>>(null);\r\n  const [deletedTaskId, setDeletedTaskId] = useState<SetStateAction<String | null>>(null);\r\n  const [chartData, setChartData] = useState<SetStateAction<Number[]>>([]);\r\n  const loggedInUser = JSON.parse(localStorage.loggedInUser);\r\n  const location = useLocation();\r\n\r\n  const setOperationMessage = (message: string) => {\r\n    setMessage(message);\r\n    setMessageSeverity(messageSeverities.SUCCESS);\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket.disconnect();\r\n    setReConnectSocket(true);\r\n    getUserFromLS();\r\n    \r\n    // eslint-disable-next-line\r\n  }, [location]);\r\n\r\n  useEffect(() => {\r\n    if (socket) {\r\n      const room = loggedInUser.organizationId;\r\n      socket.emit(\"joinRoom\", room);\r\n      socket.emit(\"getInitialTasks\");\r\n\r\n      socket.on(\"initialTasks\", (tasks: Task[]) => {\r\n        if (tasks) {\r\n          setTasks(tasks);\r\n        }\r\n      });\r\n\r\n      socket.on(\"newTask\", (newTask: Task) => {\r\n        if (newTask) {\r\n          setTasks((prevTasks: Task[]) => [...prevTasks, newTask]);\r\n          setOperationMessage(\"Task added successfully\");\r\n        }\r\n      });\r\n\r\n      socket.on(\"updatedTask\", (updatedTask: Task) => {\r\n        if (updatedTask) {\r\n          setUpdatedTask(updatedTask);\r\n          setOperationMessage(\"Task updated successfully\");\r\n        }\r\n      });\r\n\r\n      socket.on(\"deletedTaskId\", (deletedTaskId: string) => {\r\n        if (deletedTaskId) {\r\n          setDeletedTaskId(deletedTaskId);\r\n          setOperationMessage(\"Task deleted successfully\");\r\n        }\r\n      });\r\n    }\r\n\r\n    return () => socket.removeAllListeners();\r\n\r\n    // eslint-disable-next-line\r\n  }, [socket]);\r\n\r\n  useEffect(() => {\r\n    const updateTasksArray = () => {\r\n      const index = tasks.findIndex((task: Task) => task._id === updatedTask._id);\r\n\r\n      if (index > -1) {\r\n        tasks[index] = updatedTask;\r\n        setTasks(tasks);\r\n        setUpdatedTask(null);\r\n      }\r\n    };\r\n\r\n    const removeTaskFromArray = () => {\r\n      const index = tasks.findIndex((task: Task) => task._id === deletedTaskId);\r\n\r\n      if (index > -1) {\r\n        tasks.splice(index, 1);\r\n        setDeletedTaskId(null);\r\n      }\r\n    };\r\n\r\n    const setOpenClosedTasks = () => {\r\n      const openTasks = tasks.filter(task => task.status === 0);\r\n      const closedTasks = tasks.filter(task => task.status === 1);\r\n      setChartData([openTasks.length, closedTasks.length]);\r\n    };\r\n\r\n    if (tasks) {\r\n      if (updatedTask) {\r\n        updateTasksArray();\r\n      } else if (deletedTaskId) {\r\n        removeTaskFromArray();\r\n      }\r\n    }\r\n\r\n    setOpenClosedTasks();\r\n\r\n  }, [tasks, updatedTask, deletedTaskId]);\r\n\r\n  return (\r\n    <TasksContext.Provider value={{ tasks, chartData }}>\r\n      {children}\r\n    </TasksContext.Provider>\r\n  );\r\n};\r\n\r\nexport { TasksContext, TasksContextProvider };","import React, { useState, useContext } from \"react\";\r\nimport { AppContext } from \"../../contexts/AppContext\";\r\nimport { Task } from \"../../interfaces/interfaces\";\r\nimport { dialog } from \"../../styles/Styles\";\r\nimport { IconButton, Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from \"@material-ui/core\";\r\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\r\n\r\ninterface Props {\r\n  task: Task;\r\n}\r\n\r\nconst DeleteTask: React.FC<Props> = ({ task }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const { socket, loggedInUser } = useContext(AppContext);\r\n  const userId = loggedInUser._id;\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const deleteTask = async () => {\r\n    socket.emit(\"deleteTaskId\", { taskId: task._id, userId });\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <IconButton onClick={handleClickOpen}>\r\n        <DeleteOutlineIcon />\r\n      </IconButton>\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle style={dialog.title}>Delete Task...</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText style={dialog.contentText}>\r\n            Are you sure you want to delete {task.title} ?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions style={dialog.dialogActions}>\r\n          <Button onClick={deleteTask}>Yes</Button>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DeleteTask;","import React, { useState, useContext } from \"react\";\r\nimport { AppContext } from \"../../contexts/AppContext\";\r\nimport { Task } from \"../../interfaces/interfaces\";\r\nimport { formTypes } from \"../../services/helper\";\r\nimport { makeStyles, Grid, Card, CardActions, CardContent, Typography, TextField, Switch } from \"@material-ui/core\";\r\nimport { motion } from \"framer-motion\";\r\nimport { TasksContext } from \"../../contexts/TasksContext\";\r\nimport TaskForm from \"./TaskForm\";\r\nimport DeleteTask from \"./DeleteTask\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  card: {\r\n    height: \"100%\"\r\n  },\r\n  cardContent: {\r\n    textAlign: \"center\",\r\n    \"& > *\": {\r\n      overflow: \"hidden\",\r\n      textOverflow: \"ellipsis\"\r\n    }\r\n  },\r\n  userDetails: {\r\n    marginTop: \"10px\"\r\n  },\r\n  cardActions: {\r\n    justifyContent: \"center\"\r\n  }\r\n}));\r\n\r\nconst displayDate = (date: string) => {\r\n  const l10nHE = new Intl.DateTimeFormat(\"he-IL\");\r\n  return l10nHE.format(new Date(date)).split(\".\").join(\"/\");\r\n};\r\n\r\nconst Tasks: React.FC = () => {\r\n  const classes = useStyles();\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const { tasks } = useContext(TasksContext);\r\n  const { socket, loggedInUser, isAdmin } = useContext(AppContext);\r\n  const userId = loggedInUser._id;\r\n\r\n  const setTaskStatus = (updatedTask: Task) => {\r\n    updatedTask.status = updatedTask.status === 0 ? updatedTask.status = 1 : updatedTask.status = 0;\r\n    socket.emit(\"updateTask\", { updatedTask, userId });\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={2} justify=\"center\">\r\n\r\n      <Grid item xs={12} sm={10}>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          fullWidth\r\n          label=\"search\"\r\n          autoComplete=\"search\"\r\n          value={searchValue}\r\n          onChange={e => setSearchValue((e.target as HTMLInputElement).value)}\r\n        />\r\n      </Grid>\r\n\r\n      {tasks.filter((task: Task) => task.title.toLowerCase().includes(searchValue.toLocaleLowerCase())).map((task: Task) => (\r\n        <Grid item xs={12} sm={5} key={task._id}>\r\n          <motion.div layout\r\n            transition={{ duration: 0.8 }}\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            style={{ height: \"100%\" }}\r\n          >\r\n            <Card elevation={3} className={classes.card}>\r\n              <CardContent className={classes.cardContent}>\r\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">{task.title}</Typography>\r\n                <Typography variant=\"subtitle1\">{task.description}</Typography>\r\n                <div className={classes.cardContent + \" \" + classes.userDetails}>\r\n                  <Typography variant=\"subtitle1\" color=\"textSecondary\">{task.userId?.email}</Typography>\r\n                  <Typography variant=\"subtitle1\" color=\"textSecondary\">Created at: {displayDate(task.createdAt)}</Typography>\r\n                </div>\r\n              </CardContent>\r\n              {(isAdmin || task.userId?._id === userId) &&\r\n                <CardActions className={classes.cardActions}>\r\n                  <TaskForm formType={formTypes.edit} taskToEdit={task} />\r\n                  <DeleteTask task={task} />\r\n                  <Switch\r\n                    checked={task.status === 1}\r\n                    onChange={() => setTaskStatus(task)}\r\n                    color=\"primary\"\r\n                    name=\"taskStatus\"\r\n                    inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                  />\r\n                </CardActions>\r\n              }\r\n            </Card>\r\n          </motion.div>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Tasks;","import React, { useContext } from \"react\";\r\nimport { AppContext } from \"../../contexts/AppContext\";\r\nimport { formTypes } from \"../../services/helper\";\r\nimport { header, form } from \"../../styles/Styles\";\r\nimport { Typography, Button, useMediaQuery } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport TaskForm from \"./TaskForm\";\r\nimport Tasks from \"./Tasks\";\r\n\r\nconst TasksContainer: React.FC = () => {\r\n  const { isAdmin } = useContext(AppContext);\r\n  const history: any = useHistory();\r\n  const classes = form();\r\n  const isMobile = useMediaQuery('(max-width:599px)');\r\n\r\n  const moveToDashboard = () => {\r\n    history.push(\"/dashboard\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ padding: isMobile ? \"0\" : \"0 8.5%\" }}>\r\n        <Typography component=\"h1\" variant=\"h5\" style={header}>Tasks</Typography>\r\n        <TaskForm formType={formTypes.add} />\r\n\r\n        {isAdmin &&\r\n          <Button className={classes.taskButtons} style={{ marginLeft: \"10px\" }}\r\n            variant=\"contained\" color=\"primary\" onClick={moveToDashboard}>Admin Panel</Button>\r\n        }\r\n      </div>\r\n\r\n      <Tasks />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TasksContainer;","import React from \"react\";\r\nimport { header } from \"../../styles/Styles\";\r\nimport { makeStyles, Typography, Button } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  link: {\r\n    textDecoration: \"none\"\r\n  }\r\n}));\r\n\r\nconst Page404: React.FC = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Typography component=\"h1\" variant=\"h5\" style={header}>404 Page not found</Typography>\r\n      <Link to=\"/tasks\" className={classes.link}>\r\n        <Button variant=\"contained\" color=\"primary\">Back</Button>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Page404;","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router\";\r\nimport { TasksContextProvider } from \"../../contexts/TasksContext\";\r\n\r\ninterface Props {\r\n  exact: boolean;\r\n  path: string;\r\n  Component: React.ComponentType<any>;\r\n}\r\n\r\nconst AuthenticatedRoute: React.FC<Props> = ({ path, Component }) => {\r\n  return (\r\n    <Route path={path} render={() => localStorage.loggedInUser ?\r\n      <TasksContextProvider>\r\n        <Component />\r\n      </TasksContextProvider>\r\n      :\r\n      <Redirect to=\"/login\" />} />\r\n  );\r\n};\r\n\r\nexport default AuthenticatedRoute;","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router\";\r\n\r\ninterface Props {\r\n  exact: boolean;\r\n  path: string;\r\n  Component: React.ComponentType<any>;\r\n}\r\n\r\nconst UnauthenticatedRoute: React.FC<Props> = ({ path, Component }) => {\r\n  return (\r\n    <Route path={path} render={props => !localStorage.loggedInUser ? <Component {...props} /> : <Redirect to=\"/tasks\" />} />\r\n  );\r\n};\r\n\r\nexport default UnauthenticatedRoute;","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router\";\r\n\r\ninterface Props {\r\n  exact: boolean;\r\n  path: string;\r\n  Component: React.ComponentType<any>;\r\n}\r\n\r\nconst DefaultRoute: React.FC<Props> = () => {\r\n  return (\r\n    <Route render={() => localStorage.loggedInUser ? <Redirect to=\"/tasks\" /> : <Redirect to=\"/login\" />} />\r\n  );\r\n};\r\n\r\nexport default DefaultRoute;","import React, { useContext } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { useMediaQuery, Button } from \"@material-ui/core\";\r\nimport { TasksContext } from \"../../contexts/TasksContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Dashboard: React.FC = () => {\r\n  const { chartData } = useContext(TasksContext);\r\n  const history = useHistory();\r\n  const isMobile = useMediaQuery(\"(max-width:700px)\");\r\n\r\n  const chartState = {\r\n    labels: [\"Open Tasks\", \"Closed Tasks\"],\r\n    datasets: [\r\n      {\r\n        backgroundColor:\r\n          [\r\n            \"#4f8a8b\",\r\n            \"#f3ecc2\"\r\n          ],\r\n        barThickness: 30,\r\n        borderWidth: 2,\r\n        data: chartData\r\n      }\r\n    ]\r\n  };\r\n\r\n  const backToTasksPanel = () => {\r\n    history.push(\"/tasks\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button style={{ margin: isMobile ? \"30px 0\" : \"30px 0 0 65px\" }} variant=\"contained\" color=\"primary\" onClick={backToTasksPanel}>Back</Button>\r\n\r\n      <div style={{ marginTop: isMobile ? \"60px\" : \"\" }}>\r\n        <Bar\r\n          data={chartState}\r\n          options={{\r\n            title: {\r\n              display: true,\r\n              text: \"Tasks status\",\r\n              fontSize: 20\r\n            },\r\n            legend: {\r\n              display: false\r\n            },\r\n            scales: {\r\n              xAxes: [{\r\n                gridLines: {\r\n                  display: false\r\n                }\r\n              }],\r\n              yAxes: [{\r\n                ticks: {\r\n                  beginAtZero: true\r\n                }\r\n              }]\r\n            },\r\n            layout: {\r\n              padding: isMobile ? 0 : 60\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router\";\r\nimport { TasksContextProvider } from \"../../contexts/TasksContext\";\r\n\r\ninterface Props {\r\n  exact: boolean;\r\n  path: string;\r\n  Component: React.ComponentType<any>;\r\n}\r\n\r\nconst AdminRoute: React.FC<Props> = ({ path, Component }) => {\r\n  const isAdmin = localStorage.loggedInUser && JSON.parse(localStorage.loggedInUser).role === 0;\r\n\r\n  return (\r\n    <Route path={path} render={() => isAdmin ?\r\n      <TasksContextProvider>\r\n        <Component />\r\n      </TasksContextProvider>\r\n      :\r\n      <Redirect to=\"/\" />} />\r\n  );\r\n};\r\n\r\nexport default AdminRoute;","import React from \"react\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport { Route, Switch, useLocation, withRouter } from \"react-router-dom\";\r\nimport { Message } from \"../components/Message/Message\";\r\nimport Navbar from \"../components/Navbar/Navbar\";\r\nimport Login from \"../components/Forms/Login\";\r\nimport Register from \"../components/Forms/Register\";\r\nimport TasksContainer from \"../components/Tasks/TasksContainer\";\r\nimport Page404 from \"./Routes/Page404\";\r\nimport AuthenticatedRoute from \"./Routes/AuthenticatedRoute\";\r\nimport UnauthenticatedRoute from \"./Routes/UnauthenticatedRoute\";\r\nimport DefaultRoute from \"./Routes/DefaultRoute\";\r\nimport Dashboard from \"../components/Dashboard/Dashboard\";\r\nimport AdminRoute from \"./Routes/AdminRoute\";\r\n\r\nconst AppRouter: React.FC = () => {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <Container maxWidth={(location.pathname === \"/login\" || location.pathname === \"/register\") ? \"xs\" : \"lg\"}>\r\n        <Switch>\r\n          <UnauthenticatedRoute exact path=\"/login\" Component={Login} />\r\n          <UnauthenticatedRoute exact path=\"/register\" Component={Register} />\r\n          <AuthenticatedRoute exact path=\"/tasks\" Component={TasksContainer} />\r\n          <AdminRoute exact path=\"/dashboard\" Component={Dashboard} />\r\n          <DefaultRoute exact path=\"/\" Component={TasksContainer} />\r\n          <Route component={Page404} />\r\n        </Switch>\r\n        <Message />\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(AppRouter);","import React, { useState } from \"react\";\r\nimport { AppContextProvider } from \"./contexts/AppContext\";\r\nimport { ThemeProvider, CssBaseline } from \"@material-ui/core\";\r\nimport { lightTheme, darkTheme } from \"./components/Theme/Theme\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport AppRouter from \"./AppRouter/AppRouter\";\r\n\r\nconst App = () => {\r\n  const [theme, setTheme] = useState(\"light\");\r\n\r\n  return (\r\n    <AppContextProvider theme={theme} setTheme={setTheme}>\r\n      <ThemeProvider theme={theme === \"light\" ? lightTheme : darkTheme}>\r\n        <CssBaseline />\r\n        <BrowserRouter>\r\n          <AppRouter />\r\n        </BrowserRouter>\r\n      </ThemeProvider>\r\n    </AppContextProvider >\r\n  );\r\n};\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === \"[::1]\" ||\r\n  // 127.0.0.0/8 are considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won\"t work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let\"s check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n            \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It\"s the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can\"t reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(< App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}